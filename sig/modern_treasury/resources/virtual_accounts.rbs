module ModernTreasury
  module Resources
    class VirtualAccounts
      def create: (
        internal_account_id: String,
        name: String,
        ?account_details: ::Array[ModernTreasury::Models::VirtualAccountCreateParams::AccountDetail],
        ?counterparty_id: String,
        ?credit_ledger_account_id: String,
        ?debit_ledger_account_id: String,
        ?description: String,
        ?ledger_account: ModernTreasury::Models::VirtualAccountCreateParams::LedgerAccount,
        ?metadata: ::Hash[Symbol, String],
        ?routing_details: ::Array[ModernTreasury::Models::VirtualAccountCreateParams::RoutingDetail],
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::VirtualAccount

      def retrieve: (
        String id,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::VirtualAccount

      def update: (
        String id,
        ?counterparty_id: String,
        ?ledger_account_id: String,
        ?metadata: ::Hash[Symbol, String],
        ?name: String?,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::VirtualAccount

      def list: (
        ?after_cursor: String?,
        ?counterparty_id: String,
        ?internal_account_id: String,
        ?metadata: ::Hash[Symbol, String],
        ?per_page: Integer,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Internal::Page[ModernTreasury::Models::VirtualAccount]

      def delete: (
        String id,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::VirtualAccount

      def initialize: (client: ModernTreasury::Client) -> void
    end
  end
end
