module ModernTreasury
  module Resources
    class Ledgers
      def create: (
        name: String,
        ?description: String?,
        ?metadata: ::Hash[Symbol, String],
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::Ledger

      def retrieve: (
        String id,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::Ledger

      def update: (
        String id,
        ?description: String?,
        ?metadata: ::Hash[Symbol, String],
        ?name: String,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::Ledger

      def list: (
        ?id: ::Array[String],
        ?after_cursor: String?,
        ?metadata: ::Hash[Symbol, String],
        ?per_page: Integer,
        ?updated_at: ::Hash[Symbol, Time],
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Page[ModernTreasury::Models::Ledger]

      def delete: (
        String id,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Models::Ledger

      def initialize: (client: ModernTreasury::Client) -> void
    end
  end
end
