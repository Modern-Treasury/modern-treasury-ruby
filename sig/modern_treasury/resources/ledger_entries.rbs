module ModernTreasury
  module Resources
    class LedgerEntries
      def retrieve: (
        String id,
        ?show_balances: bool,
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::LedgerEntry

      def update: (
        String id,
        ?metadata: ::Hash[Symbol, String],
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::LedgerEntry

      def list: (
        ?id: ::Array[String],
        ?after_cursor: String?,
        ?as_of_lock_version: Integer,
        ?direction: ModernTreasury::Models::transaction_direction,
        ?effective_at: ::Hash[Symbol, Time],
        ?effective_date: ::Hash[Symbol, Date],
        ?ledger_account_category_id: String,
        ?ledger_account_id: String,
        ?ledger_account_lock_version: ::Hash[Symbol, Integer],
        ?ledger_account_payout_id: String,
        ?ledger_account_settlement_id: String,
        ?ledger_account_statement_id: String,
        ?ledger_transaction_id: String,
        ?metadata: ::Hash[Symbol, String],
        ?order_by: ModernTreasury::LedgerEntryListParams::OrderBy,
        ?per_page: Integer,
        ?show_balances: bool,
        ?show_deleted: bool,
        ?status: ModernTreasury::Models::LedgerEntryListParams::status,
        ?updated_at: ::Hash[Symbol, Time],
        ?request_options: ModernTreasury::request_opts
      ) -> ModernTreasury::Internal::Page[ModernTreasury::LedgerEntry]

      def initialize: (client: ModernTreasury::Client) -> void
    end
  end
end
