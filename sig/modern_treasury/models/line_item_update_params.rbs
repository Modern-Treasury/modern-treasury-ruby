module ModernTreasury
  module Models
    type line_item_update_params =
      {
        itemizable_type: ModernTreasury::Models::LineItemUpdateParams::itemizable_type,
        itemizable_id: String,
        metadata: ::Hash[Symbol, String]
      }
      & ModernTreasury::Internal::Type::request_parameters

    class LineItemUpdateParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor itemizable_type: ModernTreasury::Models::LineItemUpdateParams::itemizable_type

      attr_accessor itemizable_id: String

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      def initialize: (
        itemizable_type: ModernTreasury::Models::LineItemUpdateParams::itemizable_type,
        itemizable_id: String,
        ?metadata: ::Hash[Symbol, String],
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> ModernTreasury::Models::line_item_update_params

      type itemizable_type = :expected_payments | :payment_orders

      module ItemizableType
        extend ModernTreasury::Internal::Type::Enum

        EXPECTED_PAYMENTS: :expected_payments
        PAYMENT_ORDERS: :payment_orders

        def self?.values: -> ::Array[ModernTreasury::Models::LineItemUpdateParams::itemizable_type]
      end
    end
  end
end
