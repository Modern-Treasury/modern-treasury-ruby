module ModernTreasury
  module Models
    type legal_entity_association =
      {
        id: String,
        child_legal_entity: ModernTreasury::LegalEntityAssociation::ChildLegalEntity,
        created_at: Time,
        discarded_at: Time?,
        live_mode: bool,
        object: String,
        ownership_percentage: Integer?,
        parent_legal_entity_id: String,
        relationship_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::relationship_type],
        title: String?,
        updated_at: Time
      }

    class LegalEntityAssociation < ModernTreasury::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor child_legal_entity: ModernTreasury::LegalEntityAssociation::ChildLegalEntity

      attr_accessor created_at: Time

      attr_accessor discarded_at: Time?

      attr_accessor live_mode: bool

      attr_accessor object: String

      attr_accessor ownership_percentage: Integer?

      attr_accessor parent_legal_entity_id: String

      attr_accessor relationship_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::relationship_type]

      attr_accessor title: String?

      attr_accessor updated_at: Time

      def initialize: (
        id: String,
        child_legal_entity: ModernTreasury::LegalEntityAssociation::ChildLegalEntity,
        created_at: Time,
        discarded_at: Time?,
        live_mode: bool,
        object: String,
        ownership_percentage: Integer?,
        parent_legal_entity_id: String,
        relationship_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::relationship_type],
        title: String?,
        updated_at: Time
      ) -> void

      def to_hash: -> {
        id: String,
        child_legal_entity: ModernTreasury::LegalEntityAssociation::ChildLegalEntity,
        created_at: Time,
        discarded_at: Time?,
        live_mode: bool,
        object: String,
        ownership_percentage: Integer?,
        parent_legal_entity_id: String,
        relationship_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::relationship_type],
        title: String?,
        updated_at: Time
      }

      type child_legal_entity =
        {
          id: String,
          addresses: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Address],
          bank_settings: ModernTreasury::BankSettings?,
          business_name: String?,
          citizenship_country: String?,
          compliance_details: ModernTreasury::LegalEntityComplianceDetail?,
          created_at: Time,
          date_formed: Date?,
          date_of_birth: Date?,
          discarded_at: Time?,
          doing_business_as_names: ::Array[String],
          email: String?,
          first_name: String?,
          identifications: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Identification],
          industry_classifications: ::Array[ModernTreasury::LegalEntityIndustryClassification],
          last_name: String?,
          legal_entity_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_entity_type,
          legal_structure: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_structure?,
          live_mode: bool,
          metadata: ::Hash[Symbol, String],
          middle_name: String?,
          object: String,
          phone_numbers: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::PhoneNumber],
          politically_exposed_person: bool?,
          preferred_name: String?,
          prefix: String?,
          risk_rating: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::risk_rating?,
          suffix: String?,
          updated_at: Time,
          wealth_and_employment_details: ModernTreasury::WealthAndEmploymentDetails?,
          website: String?
        }

      class ChildLegalEntity < ModernTreasury::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor addresses: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Address]

        attr_accessor bank_settings: ModernTreasury::BankSettings?

        attr_accessor business_name: String?

        attr_accessor citizenship_country: String?

        attr_accessor compliance_details: ModernTreasury::LegalEntityComplianceDetail?

        attr_accessor created_at: Time

        attr_accessor date_formed: Date?

        attr_accessor date_of_birth: Date?

        attr_accessor discarded_at: Time?

        attr_accessor doing_business_as_names: ::Array[String]

        attr_accessor email: String?

        attr_accessor first_name: String?

        attr_accessor identifications: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Identification]

        attr_accessor industry_classifications: ::Array[ModernTreasury::LegalEntityIndustryClassification]

        attr_accessor last_name: String?

        attr_accessor legal_entity_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_entity_type

        attr_accessor legal_structure: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_structure?

        attr_accessor live_mode: bool

        attr_accessor metadata: ::Hash[Symbol, String]

        attr_accessor middle_name: String?

        attr_accessor object: String

        attr_accessor phone_numbers: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::PhoneNumber]

        attr_accessor politically_exposed_person: bool?

        attr_accessor preferred_name: String?

        attr_accessor prefix: String?

        attr_accessor risk_rating: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::risk_rating?

        attr_accessor suffix: String?

        attr_accessor updated_at: Time

        attr_accessor wealth_and_employment_details: ModernTreasury::WealthAndEmploymentDetails?

        attr_accessor website: String?

        def initialize: (
          id: String,
          addresses: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Address],
          bank_settings: ModernTreasury::BankSettings?,
          business_name: String?,
          citizenship_country: String?,
          compliance_details: ModernTreasury::LegalEntityComplianceDetail?,
          created_at: Time,
          date_formed: Date?,
          date_of_birth: Date?,
          discarded_at: Time?,
          doing_business_as_names: ::Array[String],
          email: String?,
          first_name: String?,
          identifications: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Identification],
          industry_classifications: ::Array[ModernTreasury::LegalEntityIndustryClassification],
          last_name: String?,
          legal_entity_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_entity_type,
          legal_structure: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_structure?,
          live_mode: bool,
          metadata: ::Hash[Symbol, String],
          middle_name: String?,
          object: String,
          phone_numbers: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::PhoneNumber],
          politically_exposed_person: bool?,
          preferred_name: String?,
          prefix: String?,
          risk_rating: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::risk_rating?,
          suffix: String?,
          updated_at: Time,
          wealth_and_employment_details: ModernTreasury::WealthAndEmploymentDetails?,
          website: String?
        ) -> void

        def to_hash: -> {
          id: String,
          addresses: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Address],
          bank_settings: ModernTreasury::BankSettings?,
          business_name: String?,
          citizenship_country: String?,
          compliance_details: ModernTreasury::LegalEntityComplianceDetail?,
          created_at: Time,
          date_formed: Date?,
          date_of_birth: Date?,
          discarded_at: Time?,
          doing_business_as_names: ::Array[String],
          email: String?,
          first_name: String?,
          identifications: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::Identification],
          industry_classifications: ::Array[ModernTreasury::LegalEntityIndustryClassification],
          last_name: String?,
          legal_entity_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_entity_type,
          legal_structure: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_structure?,
          live_mode: bool,
          metadata: ::Hash[Symbol, String],
          middle_name: String?,
          object: String,
          phone_numbers: ::Array[ModernTreasury::LegalEntityAssociation::ChildLegalEntity::PhoneNumber],
          politically_exposed_person: bool?,
          preferred_name: String?,
          prefix: String?,
          risk_rating: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::risk_rating?,
          suffix: String?,
          updated_at: Time,
          wealth_and_employment_details: ModernTreasury::WealthAndEmploymentDetails?,
          website: String?
        }

        type address =
          {
            id: String,
            address_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Address::address_type],
            country: String?,
            created_at: Time,
            discarded_at: Time?,
            :line1 => String?,
            :line2 => String?,
            live_mode: bool,
            locality: String?,
            object: String,
            postal_code: String?,
            region: String?,
            updated_at: Time
          }

        class Address < ModernTreasury::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor address_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Address::address_type]

          attr_accessor country: String?

          attr_accessor created_at: Time

          attr_accessor discarded_at: Time?

          attr_accessor line1: String?

          attr_accessor line2: String?

          attr_accessor live_mode: bool

          attr_accessor locality: String?

          attr_accessor object: String

          attr_accessor postal_code: String?

          attr_accessor region: String?

          attr_accessor updated_at: Time

          def initialize: (
            id: String,
            address_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Address::address_type],
            country: String?,
            created_at: Time,
            discarded_at: Time?,
            line1: String?,
            line2: String?,
            live_mode: bool,
            locality: String?,
            object: String,
            postal_code: String?,
            region: String?,
            updated_at: Time
          ) -> void

          def to_hash: -> {
            id: String,
            address_types: ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Address::address_type],
            country: String?,
            created_at: Time,
            discarded_at: Time?,
            :line1 => String?,
            :line2 => String?,
            live_mode: bool,
            locality: String?,
            object: String,
            postal_code: String?,
            region: String?,
            updated_at: Time
          }

          type address_type =
            :business | :mailing | :other | :po_box | :residential

          module AddressType
            extend ModernTreasury::Internal::Type::Enum

            BUSINESS: :business
            MAILING: :mailing
            OTHER: :other
            PO_BOX: :po_box
            RESIDENTIAL: :residential

            def self?.values: -> ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Address::address_type]
          end
        end

        type identification =
          {
            id: String,
            created_at: Time,
            discarded_at: Time?,
            expiration_date: Date?,
            id_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Identification::id_type,
            issuing_country: String?,
            issuing_region: String?,
            live_mode: bool,
            object: String,
            updated_at: Time
          }

        class Identification < ModernTreasury::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor created_at: Time

          attr_accessor discarded_at: Time?

          attr_accessor expiration_date: Date?

          attr_accessor id_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Identification::id_type

          attr_accessor issuing_country: String?

          attr_accessor issuing_region: String?

          attr_accessor live_mode: bool

          attr_accessor object: String

          attr_accessor updated_at: Time

          def initialize: (
            id: String,
            created_at: Time,
            discarded_at: Time?,
            expiration_date: Date?,
            id_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Identification::id_type,
            issuing_country: String?,
            issuing_region: String?,
            live_mode: bool,
            object: String,
            updated_at: Time
          ) -> void

          def to_hash: -> {
            id: String,
            created_at: Time,
            discarded_at: Time?,
            expiration_date: Date?,
            id_type: ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Identification::id_type,
            issuing_country: String?,
            issuing_region: String?,
            live_mode: bool,
            object: String,
            updated_at: Time
          }

          type id_type =
            :ar_cuil
            | :ar_cuit
            | :br_cnpj
            | :br_cpf
            | :cl_run
            | :cl_rut
            | :co_cedulas
            | :co_nit
            | :drivers_license
            | :hn_id
            | :hn_rtn
            | :in_lei
            | :kr_brn
            | :kr_crn
            | :kr_rrn
            | :passport
            | :sa_tin
            | :sa_vat
            | :us_ein
            | :us_itin
            | :us_ssn
            | :vn_tin

          module IDType
            extend ModernTreasury::Internal::Type::Enum

            AR_CUIL: :ar_cuil
            AR_CUIT: :ar_cuit
            BR_CNPJ: :br_cnpj
            BR_CPF: :br_cpf
            CL_RUN: :cl_run
            CL_RUT: :cl_rut
            CO_CEDULAS: :co_cedulas
            CO_NIT: :co_nit
            DRIVERS_LICENSE: :drivers_license
            HN_ID: :hn_id
            HN_RTN: :hn_rtn
            IN_LEI: :in_lei
            KR_BRN: :kr_brn
            KR_CRN: :kr_crn
            KR_RRN: :kr_rrn
            PASSPORT: :passport
            SA_TIN: :sa_tin
            SA_VAT: :sa_vat
            US_EIN: :us_ein
            US_ITIN: :us_itin
            US_SSN: :us_ssn
            VN_TIN: :vn_tin

            def self?.values: -> ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::Identification::id_type]
          end
        end

        type legal_entity_type = :business | :individual | :joint

        module LegalEntityType
          extend ModernTreasury::Internal::Type::Enum

          BUSINESS: :business
          INDIVIDUAL: :individual
          JOINT: :joint

          def self?.values: -> ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_entity_type]
        end

        type legal_structure =
          :corporation
          | :llc
          | :non_profit
          | :partnership
          | :sole_proprietorship
          | :trust

        module LegalStructure
          extend ModernTreasury::Internal::Type::Enum

          CORPORATION: :corporation
          LLC: :llc
          NON_PROFIT: :non_profit
          PARTNERSHIP: :partnership
          SOLE_PROPRIETORSHIP: :sole_proprietorship
          TRUST: :trust

          def self?.values: -> ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::legal_structure]
        end

        type phone_number = { phone_number: String }

        class PhoneNumber < ModernTreasury::Internal::Type::BaseModel
          attr_reader phone_number: String?

          def phone_number=: (String) -> String

          def initialize: (?phone_number: String) -> void

          def to_hash: -> { phone_number: String }
        end

        type risk_rating = :low | :medium | :high

        module RiskRating
          extend ModernTreasury::Internal::Type::Enum

          LOW: :low
          MEDIUM: :medium
          HIGH: :high

          def self?.values: -> ::Array[ModernTreasury::Models::LegalEntityAssociation::ChildLegalEntity::risk_rating]
        end
      end

      type relationship_type =
        :authorized_signer | :beneficial_owner | :control_person

      module RelationshipType
        extend ModernTreasury::Internal::Type::Enum

        AUTHORIZED_SIGNER: :authorized_signer
        BENEFICIAL_OWNER: :beneficial_owner
        CONTROL_PERSON: :control_person

        def self?.values: -> ::Array[ModernTreasury::Models::LegalEntityAssociation::relationship_type]
      end
    end
  end
end
