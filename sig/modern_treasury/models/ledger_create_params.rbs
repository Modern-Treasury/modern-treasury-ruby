module ModernTreasury
  module Models
    type ledger_create_params =
      { name: String, description: String?, metadata: ::Hash[Symbol, String] }
      & ModernTreasury::Internal::Type::request_parameters

    class LedgerCreateParams < ModernTreasury::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor name: String

      attr_accessor description: String?

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      def initialize: (
        name: String,
        ?description: String?,
        ?metadata: ::Hash[Symbol, String],
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> ModernTreasury::Models::ledger_create_params
    end
  end
end
