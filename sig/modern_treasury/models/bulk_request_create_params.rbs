module ModernTreasury
  module Models
    type bulk_request_create_params =
      {
        action_type: ModernTreasury::Models::BulkRequestCreateParams::action_type,
        resource_type: ModernTreasury::Models::BulkRequestCreateParams::resource_type,
        resources: ::Array[ModernTreasury::Models::BulkRequestCreateParams::resource],
        metadata: ::Hash[Symbol, String]
      }
      & ModernTreasury::Internal::Type::request_parameters

    class BulkRequestCreateParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor action_type: ModernTreasury::Models::BulkRequestCreateParams::action_type

      attr_accessor resource_type: ModernTreasury::Models::BulkRequestCreateParams::resource_type

      attr_accessor resources: ::Array[ModernTreasury::Models::BulkRequestCreateParams::resource]

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      def initialize: (
        action_type: ModernTreasury::Models::BulkRequestCreateParams::action_type,
        resource_type: ModernTreasury::Models::BulkRequestCreateParams::resource_type,
        resources: ::Array[ModernTreasury::Models::BulkRequestCreateParams::resource],
        ?metadata: ::Hash[Symbol, String],
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> {
        action_type: ModernTreasury::Models::BulkRequestCreateParams::action_type,
        resource_type: ModernTreasury::Models::BulkRequestCreateParams::resource_type,
        resources: ::Array[ModernTreasury::Models::BulkRequestCreateParams::resource],
        metadata: ::Hash[Symbol, String],
        request_options: ModernTreasury::RequestOptions
      }

      type action_type = :create | :update | :delete

      module ActionType
        extend ModernTreasury::Internal::Type::Enum

        CREATE: :create
        UPDATE: :update
        DELETE: :delete

        def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::action_type]
      end

      type resource_type =
        :payment_order
        | :ledger_account
        | :ledger_transaction
        | :expected_payment
        | :transaction
        | :transaction_line_item
        | :entity_link

      module ResourceType
        extend ModernTreasury::Internal::Type::Enum

        PAYMENT_ORDER: :payment_order
        LEDGER_ACCOUNT: :ledger_account
        LEDGER_TRANSACTION: :ledger_transaction
        EXPECTED_PAYMENT: :expected_payment
        TRANSACTION: :transaction
        TRANSACTION_LINE_ITEM: :transaction_line_item
        ENTITY_LINK: :entity_link

        def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::resource_type]
      end

      type resource =
        ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest
        | ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest
        | ModernTreasury::LedgerTransactionCreateRequest
        | ModernTreasury::LedgerAccountCreateRequest
        | ModernTreasury::BulkRequestCreateParams::Resource::TransactionCreateRequest
        | ModernTreasury::BulkRequestCreateParams::Resource::ID
        | ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID
        | ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID
        | ModernTreasury::BulkRequestCreateParams::Resource::TransactionUpdateRequestWithID
        | ModernTreasury::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID

      module Resource
        extend ModernTreasury::Internal::Type::Union

        type payment_order_async_create_request =
          {
            amount: Integer,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::direction,
            originating_account_id: String,
            type: ModernTreasury::Models::payment_order_type,
            accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::Accounting,
            accounting_category_id: String?,
            accounting_ledger_class_id: String?,
            charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::charge_bearer?,
            currency: ModernTreasury::Models::currency,
            description: String?,
            effective_date: Date,
            expires_at: Time?,
            fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::fallback_type,
            foreign_exchange_contract: String?,
            foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::foreign_exchange_indicator?,
            ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest,
            ledger_transaction_id: String,
            line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::LineItem],
            metadata: ::Hash[Symbol, String],
            nsf_protected: bool,
            originating_party_name: String?,
            priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::priority,
            process_after: Time?,
            purpose: String?,
            receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount,
            receiving_account_id: String,
            remittance_information: String?,
            send_remittance_advice: bool?,
            statement_descriptor: String?,
            subtype: ModernTreasury::Models::payment_order_subtype?,
            transaction_monitoring_enabled: bool,
            ultimate_originating_party_identifier: String?,
            ultimate_originating_party_name: String?,
            ultimate_receiving_party_identifier: String?,
            ultimate_receiving_party_name: String?
          }

        class PaymentOrderAsyncCreateRequest < ModernTreasury::Internal::Type::BaseModel
          attr_accessor amount: Integer

          attr_accessor direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::direction

          attr_accessor originating_account_id: String

          attr_accessor type: ModernTreasury::Models::payment_order_type

          attr_reader accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::Accounting?

          def accounting=: (
            ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::Accounting
          ) -> ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::Accounting

          attr_accessor accounting_category_id: String?

          attr_accessor accounting_ledger_class_id: String?

          attr_accessor charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::charge_bearer?

          attr_reader currency: ModernTreasury::Models::currency?

          def currency=: (
            ModernTreasury::Models::currency
          ) -> ModernTreasury::Models::currency

          attr_accessor description: String?

          attr_reader effective_date: Date?

          def effective_date=: (Date) -> Date

          attr_accessor expires_at: Time?

          attr_reader fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::fallback_type?

          def fallback_type=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::fallback_type
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::fallback_type

          attr_accessor foreign_exchange_contract: String?

          attr_accessor foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::foreign_exchange_indicator?

          attr_reader ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest?

          def ledger_transaction=: (
            ModernTreasury::LedgerTransactionCreateRequest
          ) -> ModernTreasury::LedgerTransactionCreateRequest

          attr_reader ledger_transaction_id: String?

          def ledger_transaction_id=: (String) -> String

          attr_reader line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::LineItem]?

          def line_items=: (
            ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::LineItem]
          ) -> ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::LineItem]

          attr_reader metadata: ::Hash[Symbol, String]?

          def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader nsf_protected: bool?

          def nsf_protected=: (bool) -> bool

          attr_accessor originating_party_name: String?

          attr_reader priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::priority?

          def priority=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::priority
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::priority

          attr_accessor process_after: Time?

          attr_accessor purpose: String?

          attr_reader receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount?

          def receiving_account=: (
            ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount
          ) -> ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount

          attr_reader receiving_account_id: String?

          def receiving_account_id=: (String) -> String

          attr_accessor remittance_information: String?

          attr_accessor send_remittance_advice: bool?

          attr_accessor statement_descriptor: String?

          attr_accessor subtype: ModernTreasury::Models::payment_order_subtype?

          attr_reader transaction_monitoring_enabled: bool?

          def transaction_monitoring_enabled=: (bool) -> bool

          attr_accessor ultimate_originating_party_identifier: String?

          attr_accessor ultimate_originating_party_name: String?

          attr_accessor ultimate_receiving_party_identifier: String?

          attr_accessor ultimate_receiving_party_name: String?

          def initialize: (
            amount: Integer,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::direction,
            originating_account_id: String,
            type: ModernTreasury::Models::payment_order_type,
            ?accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::Accounting,
            ?accounting_category_id: String?,
            ?accounting_ledger_class_id: String?,
            ?charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::charge_bearer?,
            ?currency: ModernTreasury::Models::currency,
            ?description: String?,
            ?effective_date: Date,
            ?expires_at: Time?,
            ?fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::fallback_type,
            ?foreign_exchange_contract: String?,
            ?foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::foreign_exchange_indicator?,
            ?ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest,
            ?ledger_transaction_id: String,
            ?line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::LineItem],
            ?metadata: ::Hash[Symbol, String],
            ?nsf_protected: bool,
            ?originating_party_name: String?,
            ?priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::priority,
            ?process_after: Time?,
            ?purpose: String?,
            ?receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount,
            ?receiving_account_id: String,
            ?remittance_information: String?,
            ?send_remittance_advice: bool?,
            ?statement_descriptor: String?,
            ?subtype: ModernTreasury::Models::payment_order_subtype?,
            ?transaction_monitoring_enabled: bool,
            ?ultimate_originating_party_identifier: String?,
            ?ultimate_originating_party_name: String?,
            ?ultimate_receiving_party_identifier: String?,
            ?ultimate_receiving_party_name: String?
          ) -> void

          def to_hash: -> {
            amount: Integer,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::direction,
            originating_account_id: String,
            type: ModernTreasury::Models::payment_order_type,
            accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::Accounting,
            accounting_category_id: String?,
            accounting_ledger_class_id: String?,
            charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::charge_bearer?,
            currency: ModernTreasury::Models::currency,
            description: String?,
            effective_date: Date,
            expires_at: Time?,
            fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::fallback_type,
            foreign_exchange_contract: String?,
            foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::foreign_exchange_indicator?,
            ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest,
            ledger_transaction_id: String,
            line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::LineItem],
            metadata: ::Hash[Symbol, String],
            nsf_protected: bool,
            originating_party_name: String?,
            priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::priority,
            process_after: Time?,
            purpose: String?,
            receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount,
            receiving_account_id: String,
            remittance_information: String?,
            send_remittance_advice: bool?,
            statement_descriptor: String?,
            subtype: ModernTreasury::Models::payment_order_subtype?,
            transaction_monitoring_enabled: bool,
            ultimate_originating_party_identifier: String?,
            ultimate_originating_party_name: String?,
            ultimate_receiving_party_identifier: String?,
            ultimate_receiving_party_name: String?
          }

          type direction = :credit | :debit

          module Direction
            extend ModernTreasury::Internal::Type::Enum

            CREDIT: :credit
            DEBIT: :debit

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::direction]
          end

          type accounting = { account_id: String?, class_id: String? }

          class Accounting < ModernTreasury::Internal::Type::BaseModel
            attr_accessor account_id: String?

            attr_accessor class_id: String?

            def initialize: (?account_id: String?, ?class_id: String?) -> void

            def to_hash: -> { account_id: String?, class_id: String? }
          end

          type charge_bearer = :shared | :sender | :receiver

          module ChargeBearer
            extend ModernTreasury::Internal::Type::Enum

            SHARED: :shared
            SENDER: :sender
            RECEIVER: :receiver

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::charge_bearer]
          end

          type fallback_type = :ach

          module FallbackType
            extend ModernTreasury::Internal::Type::Enum

            ACH: :ach

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::fallback_type]
          end

          type foreign_exchange_indicator =
            :fixed_to_variable | :variable_to_fixed

          module ForeignExchangeIndicator
            extend ModernTreasury::Internal::Type::Enum

            FIXED_TO_VARIABLE: :fixed_to_variable
            VARIABLE_TO_FIXED: :variable_to_fixed

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::foreign_exchange_indicator]
          end

          type line_item =
            {
              amount: Integer,
              accounting_category_id: String?,
              description: String?,
              metadata: ::Hash[Symbol, String]
            }

          class LineItem < ModernTreasury::Internal::Type::BaseModel
            attr_accessor amount: Integer

            attr_accessor accounting_category_id: String?

            attr_accessor description: String?

            attr_reader metadata: ::Hash[Symbol, String]?

            def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

            def initialize: (
              amount: Integer,
              ?accounting_category_id: String?,
              ?description: String?,
              ?metadata: ::Hash[Symbol, String]
            ) -> void

            def to_hash: -> {
              amount: Integer,
              accounting_category_id: String?,
              description: String?,
              metadata: ::Hash[Symbol, String]
            }
          end

          type priority = :high | :normal

          module Priority
            extend ModernTreasury::Internal::Type::Enum

            HIGH: :high
            NORMAL: :normal

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::priority]
          end

          type receiving_account =
            {
              account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail],
              account_type: ModernTreasury::Models::external_account_type,
              contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
              external_id: String?,
              ledger_account: ModernTreasury::LedgerAccountCreateRequest,
              metadata: ::Hash[Symbol, String],
              name: String?,
              party_address: ModernTreasury::AddressRequest,
              party_identifier: String,
              party_name: String,
              party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::party_type?,
              plaid_processor_token: String,
              routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail]
            }

          class ReceivingAccount < ModernTreasury::Internal::Type::BaseModel
            attr_reader account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail]?

            def account_details=: (
              ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail]
            ) -> ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail]

            attr_reader account_type: ModernTreasury::Models::external_account_type?

            def account_type=: (
              ModernTreasury::Models::external_account_type
            ) -> ModernTreasury::Models::external_account_type

            attr_reader contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest]?

            def contact_details=: (
              ::Array[ModernTreasury::ContactDetailCreateRequest]
            ) -> ::Array[ModernTreasury::ContactDetailCreateRequest]

            attr_accessor external_id: String?

            attr_reader ledger_account: ModernTreasury::LedgerAccountCreateRequest?

            def ledger_account=: (
              ModernTreasury::LedgerAccountCreateRequest
            ) -> ModernTreasury::LedgerAccountCreateRequest

            attr_reader metadata: ::Hash[Symbol, String]?

            def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

            attr_accessor name: String?

            attr_reader party_address: ModernTreasury::AddressRequest?

            def party_address=: (
              ModernTreasury::AddressRequest
            ) -> ModernTreasury::AddressRequest

            attr_reader party_identifier: String?

            def party_identifier=: (String) -> String

            attr_reader party_name: String?

            def party_name=: (String) -> String

            attr_accessor party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::party_type?

            attr_reader plaid_processor_token: String?

            def plaid_processor_token=: (String) -> String

            attr_reader routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail]?

            def routing_details=: (
              ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail]
            ) -> ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail]

            def initialize: (
              ?account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail],
              ?account_type: ModernTreasury::Models::external_account_type,
              ?contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
              ?external_id: String?,
              ?ledger_account: ModernTreasury::LedgerAccountCreateRequest,
              ?metadata: ::Hash[Symbol, String],
              ?name: String?,
              ?party_address: ModernTreasury::AddressRequest,
              ?party_identifier: String,
              ?party_name: String,
              ?party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::party_type?,
              ?plaid_processor_token: String,
              ?routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail]
            ) -> void

            def to_hash: -> {
              account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail],
              account_type: ModernTreasury::Models::external_account_type,
              contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
              external_id: String?,
              ledger_account: ModernTreasury::LedgerAccountCreateRequest,
              metadata: ::Hash[Symbol, String],
              name: String?,
              party_address: ModernTreasury::AddressRequest,
              party_identifier: String,
              party_name: String,
              party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::party_type?,
              plaid_processor_token: String,
              routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail]
            }

            type account_detail =
              {
                account_number: String,
                account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail::account_number_type
              }

            class AccountDetail < ModernTreasury::Internal::Type::BaseModel
              attr_accessor account_number: String

              attr_reader account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail::account_number_type?

              def account_number_type=: (
                ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail::account_number_type
              ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail::account_number_type

              def initialize: (
                account_number: String,
                ?account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail::account_number_type
              ) -> void

              def to_hash: -> {
                account_number: String,
                account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail::account_number_type
              }

              type account_number_type =
                :au_number
                | :base_address
                | :clabe
                | :ethereum_address
                | :hk_number
                | :iban
                | :id_number
                | :nz_number
                | :other
                | :pan
                | :polygon_address
                | :sg_number
                | :solana_address
                | :wallet_address

              module AccountNumberType
                extend ModernTreasury::Internal::Type::Enum

                AU_NUMBER: :au_number
                BASE_ADDRESS: :base_address
                CLABE: :clabe
                ETHEREUM_ADDRESS: :ethereum_address
                HK_NUMBER: :hk_number
                IBAN: :iban
                ID_NUMBER: :id_number
                NZ_NUMBER: :nz_number
                OTHER: :other
                PAN: :pan
                POLYGON_ADDRESS: :polygon_address
                SG_NUMBER: :sg_number
                SOLANA_ADDRESS: :solana_address
                WALLET_ADDRESS: :wallet_address

                def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::AccountDetail::account_number_type]
              end
            end

            type party_type = :business | :individual

            module PartyType
              extend ModernTreasury::Internal::Type::Enum

              BUSINESS: :business
              INDIVIDUAL: :individual

              def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::party_type]
            end

            type routing_detail =
              {
                routing_number: String,
                routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::routing_number_type,
                payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::payment_type
              }

            class RoutingDetail < ModernTreasury::Internal::Type::BaseModel
              attr_accessor routing_number: String

              attr_accessor routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::routing_number_type

              attr_reader payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::payment_type?

              def payment_type=: (
                ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::payment_type
              ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::payment_type

              def initialize: (
                routing_number: String,
                routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::routing_number_type,
                ?payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::payment_type
              ) -> void

              def to_hash: -> {
                routing_number: String,
                routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::routing_number_type,
                payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::payment_type
              }

              type routing_number_type =
                :aba
                | :au_bsb
                | :br_codigo
                | :ca_cpa
                | :chips
                | :cnaps
                | :dk_interbank_clearing_code
                | :gb_sort_code
                | :hk_interbank_clearing_code
                | :hu_interbank_clearing_code
                | :id_sknbi_code
                | :il_bank_code
                | :in_ifsc
                | :jp_zengin_code
                | :my_branch_code
                | :mx_bank_identifier
                | :nz_national_clearing_code
                | :pl_national_clearing_code
                | :se_bankgiro_clearing_code
                | :sg_interbank_clearing_code
                | :swift
                | :za_national_clearing_code

              module RoutingNumberType
                extend ModernTreasury::Internal::Type::Enum

                ABA: :aba
                AU_BSB: :au_bsb
                BR_CODIGO: :br_codigo
                CA_CPA: :ca_cpa
                CHIPS: :chips
                CNAPS: :cnaps
                DK_INTERBANK_CLEARING_CODE: :dk_interbank_clearing_code
                GB_SORT_CODE: :gb_sort_code
                HK_INTERBANK_CLEARING_CODE: :hk_interbank_clearing_code
                HU_INTERBANK_CLEARING_CODE: :hu_interbank_clearing_code
                ID_SKNBI_CODE: :id_sknbi_code
                IL_BANK_CODE: :il_bank_code
                IN_IFSC: :in_ifsc
                JP_ZENGIN_CODE: :jp_zengin_code
                MY_BRANCH_CODE: :my_branch_code
                MX_BANK_IDENTIFIER: :mx_bank_identifier
                NZ_NATIONAL_CLEARING_CODE: :nz_national_clearing_code
                PL_NATIONAL_CLEARING_CODE: :pl_national_clearing_code
                SE_BANKGIRO_CLEARING_CODE: :se_bankgiro_clearing_code
                SG_INTERBANK_CLEARING_CODE: :sg_interbank_clearing_code
                SWIFT: :swift
                ZA_NATIONAL_CLEARING_CODE: :za_national_clearing_code

                def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::routing_number_type]
              end

              type payment_type =
                :ach
                | :au_becs
                | :bacs
                | :base
                | :book
                | :card
                | :chats
                | :check
                | :cross_border
                | :dk_nets
                | :eft
                | :ethereum
                | :gb_fps
                | :hu_ics
                | :interac
                | :masav
                | :mx_ccen
                | :neft
                | :nics
                | :nz_becs
                | :pl_elixir
                | :polygon
                | :provxchange
                | :ro_sent
                | :rtp
                | :se_bankgirot
                | :sen
                | :sepa
                | :sg_giro
                | :sic
                | :signet
                | :sknbi
                | :solana
                | :wire
                | :zengin

              module PaymentType
                extend ModernTreasury::Internal::Type::Enum

                ACH: :ach
                AU_BECS: :au_becs
                BACS: :bacs
                BASE: :base
                BOOK: :book
                CARD: :card
                CHATS: :chats
                CHECK: :check
                CROSS_BORDER: :cross_border
                DK_NETS: :dk_nets
                EFT: :eft
                ETHEREUM: :ethereum
                GB_FPS: :gb_fps
                HU_ICS: :hu_ics
                INTERAC: :interac
                MASAV: :masav
                MX_CCEN: :mx_ccen
                NEFT: :neft
                NICS: :nics
                NZ_BECS: :nz_becs
                PL_ELIXIR: :pl_elixir
                POLYGON: :polygon
                PROVXCHANGE: :provxchange
                RO_SENT: :ro_sent
                RTP: :rtp
                SE_BANKGIROT: :se_bankgirot
                SEN: :sen
                SEPA: :sepa
                SG_GIRO: :sg_giro
                SIC: :sic
                SIGNET: :signet
                SKNBI: :sknbi
                SOLANA: :solana
                WIRE: :wire
                ZENGIN: :zengin

                def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderAsyncCreateRequest::ReceivingAccount::RoutingDetail::payment_type]
              end
            end
          end
        end

        type expected_payment_create_request =
          {
            amount_lower_bound: Integer?,
            amount_upper_bound: Integer?,
            counterparty_id: String?,
            currency: ModernTreasury::Models::currency?,
            date_lower_bound: Date?,
            date_upper_bound: Date?,
            description: String?,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::direction?,
            external_id: String?,
            internal_account_id: String?,
            ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest,
            ledger_transaction_id: String,
            line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::LineItem],
            metadata: ::Hash[Symbol, String],
            reconciliation_filters: top?,
            reconciliation_groups: top?,
            reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?,
            remittance_information: String?,
            statement_descriptor: String?,
            type: ModernTreasury::Models::expected_payment_type?
          }

        class ExpectedPaymentCreateRequest < ModernTreasury::Internal::Type::BaseModel
          attr_accessor amount_lower_bound: Integer?

          attr_accessor amount_upper_bound: Integer?

          attr_accessor counterparty_id: String?

          attr_accessor currency: ModernTreasury::Models::currency?

          attr_accessor date_lower_bound: Date?

          attr_accessor date_upper_bound: Date?

          attr_accessor description: String?

          attr_accessor direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::direction?

          attr_accessor external_id: String?

          attr_accessor internal_account_id: String?

          attr_reader ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest?

          def ledger_transaction=: (
            ModernTreasury::LedgerTransactionCreateRequest
          ) -> ModernTreasury::LedgerTransactionCreateRequest

          attr_reader ledger_transaction_id: String?

          def ledger_transaction_id=: (String) -> String

          attr_reader line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::LineItem]?

          def line_items=: (
            ::Array[ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::LineItem]
          ) -> ::Array[ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::LineItem]

          attr_reader metadata: ::Hash[Symbol, String]?

          def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_accessor reconciliation_filters: top?

          attr_accessor reconciliation_groups: top?

          attr_accessor reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?

          attr_accessor remittance_information: String?

          attr_accessor statement_descriptor: String?

          attr_accessor type: ModernTreasury::Models::expected_payment_type?

          def initialize: (
            ?amount_lower_bound: Integer?,
            ?amount_upper_bound: Integer?,
            ?counterparty_id: String?,
            ?currency: ModernTreasury::Models::currency?,
            ?date_lower_bound: Date?,
            ?date_upper_bound: Date?,
            ?description: String?,
            ?direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::direction?,
            ?external_id: String?,
            ?internal_account_id: String?,
            ?ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest,
            ?ledger_transaction_id: String,
            ?line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::LineItem],
            ?metadata: ::Hash[Symbol, String],
            ?reconciliation_filters: top?,
            ?reconciliation_groups: top?,
            ?reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?,
            ?remittance_information: String?,
            ?statement_descriptor: String?,
            ?type: ModernTreasury::Models::expected_payment_type?
          ) -> void

          def to_hash: -> {
            amount_lower_bound: Integer?,
            amount_upper_bound: Integer?,
            counterparty_id: String?,
            currency: ModernTreasury::Models::currency?,
            date_lower_bound: Date?,
            date_upper_bound: Date?,
            description: String?,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::direction?,
            external_id: String?,
            internal_account_id: String?,
            ledger_transaction: ModernTreasury::LedgerTransactionCreateRequest,
            ledger_transaction_id: String,
            line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::LineItem],
            metadata: ::Hash[Symbol, String],
            reconciliation_filters: top?,
            reconciliation_groups: top?,
            reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?,
            remittance_information: String?,
            statement_descriptor: String?,
            type: ModernTreasury::Models::expected_payment_type?
          }

          type direction = :credit | :debit

          module Direction
            extend ModernTreasury::Internal::Type::Enum

            CREDIT: :credit
            DEBIT: :debit

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentCreateRequest::direction]
          end

          type line_item =
            {
              amount: Integer,
              accounting_category_id: String?,
              description: String?,
              metadata: ::Hash[Symbol, String]
            }

          class LineItem < ModernTreasury::Internal::Type::BaseModel
            attr_accessor amount: Integer

            attr_accessor accounting_category_id: String?

            attr_accessor description: String?

            attr_reader metadata: ::Hash[Symbol, String]?

            def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

            def initialize: (
              amount: Integer,
              ?accounting_category_id: String?,
              ?description: String?,
              ?metadata: ::Hash[Symbol, String]
            ) -> void

            def to_hash: -> {
              amount: Integer,
              accounting_category_id: String?,
              description: String?,
              metadata: ::Hash[Symbol, String]
            }
          end
        end

        type transaction_create_request =
          {
            amount: Integer,
            as_of_date: Date?,
            direction: String,
            internal_account_id: String,
            vendor_code: String?,
            vendor_code_type: String?,
            metadata: ::Hash[Symbol, String],
            posted: bool,
            type: ModernTreasury::Models::BulkRequestCreateParams::Resource::TransactionCreateRequest::type_?,
            vendor_customer_id: String?,
            vendor_description: String?
          }

        class TransactionCreateRequest < ModernTreasury::Internal::Type::BaseModel
          attr_accessor amount: Integer

          attr_accessor as_of_date: Date?

          attr_accessor direction: String

          attr_accessor internal_account_id: String

          attr_accessor vendor_code: String?

          attr_accessor vendor_code_type: String?

          attr_reader metadata: ::Hash[Symbol, String]?

          def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader posted: bool?

          def posted=: (bool) -> bool

          attr_accessor type: ModernTreasury::Models::BulkRequestCreateParams::Resource::TransactionCreateRequest::type_?

          attr_accessor vendor_customer_id: String?

          attr_accessor vendor_description: String?

          def initialize: (
            amount: Integer,
            as_of_date: Date?,
            direction: String,
            internal_account_id: String,
            vendor_code: String?,
            vendor_code_type: String?,
            ?metadata: ::Hash[Symbol, String],
            ?posted: bool,
            ?type: ModernTreasury::Models::BulkRequestCreateParams::Resource::TransactionCreateRequest::type_?,
            ?vendor_customer_id: String?,
            ?vendor_description: String?
          ) -> void

          def to_hash: -> {
            amount: Integer,
            as_of_date: Date?,
            direction: String,
            internal_account_id: String,
            vendor_code: String?,
            vendor_code_type: String?,
            metadata: ::Hash[Symbol, String],
            posted: bool,
            type: ModernTreasury::Models::BulkRequestCreateParams::Resource::TransactionCreateRequest::type_?,
            vendor_customer_id: String?,
            vendor_description: String?
          }

          type type_ =
            :ach
            | :au_becs
            | :bacs
            | :base
            | :book
            | :card
            | :chats
            | :check
            | :cross_border
            | :dk_nets
            | :eft
            | :ethereum
            | :gb_fps
            | :hu_ics
            | :interac
            | :masav
            | :mx_ccen
            | :neft
            | :nics
            | :nz_becs
            | :pl_elixir
            | :polygon
            | :provxchange
            | :ro_sent
            | :rtp
            | :se_bankgirot
            | :sen
            | :sepa
            | :sg_giro
            | :sic
            | :signet
            | :sknbi
            | :solana
            | :wire
            | :zengin
            | :other

          module Type
            extend ModernTreasury::Internal::Type::Enum

            ACH: :ach
            AU_BECS: :au_becs
            BACS: :bacs
            BASE: :base
            BOOK: :book
            CARD: :card
            CHATS: :chats
            CHECK: :check
            CROSS_BORDER: :cross_border
            DK_NETS: :dk_nets
            EFT: :eft
            ETHEREUM: :ethereum
            GB_FPS: :gb_fps
            HU_ICS: :hu_ics
            INTERAC: :interac
            MASAV: :masav
            MX_CCEN: :mx_ccen
            NEFT: :neft
            NICS: :nics
            NZ_BECS: :nz_becs
            PL_ELIXIR: :pl_elixir
            POLYGON: :polygon
            PROVXCHANGE: :provxchange
            RO_SENT: :ro_sent
            RTP: :rtp
            SE_BANKGIROT: :se_bankgirot
            SEN: :sen
            SEPA: :sepa
            SG_GIRO: :sg_giro
            SIC: :sic
            SIGNET: :signet
            SKNBI: :sknbi
            SOLANA: :solana
            WIRE: :wire
            ZENGIN: :zengin
            OTHER: :other

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::TransactionCreateRequest::type_]
          end
        end

        type id = { id: String }

        class ID < ModernTreasury::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          def initialize: (?id: String) -> void

          def to_hash: -> { id: String }
        end

        type payment_order_update_request_with_id =
          {
            id: String,
            accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::Accounting,
            accounting_category_id: String?,
            accounting_ledger_class_id: String?,
            amount: Integer,
            charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::charge_bearer?,
            counterparty_id: String?,
            currency: ModernTreasury::Models::currency,
            description: String?,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::direction,
            effective_date: Date,
            expires_at: Time?,
            fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::fallback_type,
            foreign_exchange_contract: String?,
            foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::foreign_exchange_indicator?,
            line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::LineItem],
            metadata: ::Hash[Symbol, String],
            nsf_protected: bool,
            originating_account_id: String,
            originating_party_name: String?,
            priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::priority,
            process_after: Time?,
            purpose: String?,
            receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount,
            receiving_account_id: String,
            remittance_information: String?,
            send_remittance_advice: bool?,
            statement_descriptor: String?,
            status: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::status,
            subtype: ModernTreasury::Models::payment_order_subtype?,
            type: ModernTreasury::Models::payment_order_type,
            ultimate_originating_party_identifier: String?,
            ultimate_originating_party_name: String?,
            ultimate_receiving_party_identifier: String?,
            ultimate_receiving_party_name: String?
          }

        class PaymentOrderUpdateRequestWithID < ModernTreasury::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          attr_reader accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::Accounting?

          def accounting=: (
            ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::Accounting
          ) -> ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::Accounting

          attr_accessor accounting_category_id: String?

          attr_accessor accounting_ledger_class_id: String?

          attr_reader amount: Integer?

          def amount=: (Integer) -> Integer

          attr_accessor charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::charge_bearer?

          attr_accessor counterparty_id: String?

          attr_reader currency: ModernTreasury::Models::currency?

          def currency=: (
            ModernTreasury::Models::currency
          ) -> ModernTreasury::Models::currency

          attr_accessor description: String?

          attr_reader direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::direction?

          def direction=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::direction
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::direction

          attr_reader effective_date: Date?

          def effective_date=: (Date) -> Date

          attr_accessor expires_at: Time?

          attr_reader fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::fallback_type?

          def fallback_type=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::fallback_type
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::fallback_type

          attr_accessor foreign_exchange_contract: String?

          attr_accessor foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::foreign_exchange_indicator?

          attr_reader line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::LineItem]?

          def line_items=: (
            ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::LineItem]
          ) -> ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::LineItem]

          attr_reader metadata: ::Hash[Symbol, String]?

          def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader nsf_protected: bool?

          def nsf_protected=: (bool) -> bool

          attr_reader originating_account_id: String?

          def originating_account_id=: (String) -> String

          attr_accessor originating_party_name: String?

          attr_reader priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::priority?

          def priority=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::priority
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::priority

          attr_accessor process_after: Time?

          attr_accessor purpose: String?

          attr_reader receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount?

          def receiving_account=: (
            ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount
          ) -> ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount

          attr_reader receiving_account_id: String?

          def receiving_account_id=: (String) -> String

          attr_accessor remittance_information: String?

          attr_accessor send_remittance_advice: bool?

          attr_accessor statement_descriptor: String?

          attr_reader status: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::status?

          def status=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::status
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::status

          attr_accessor subtype: ModernTreasury::Models::payment_order_subtype?

          attr_reader type: ModernTreasury::Models::payment_order_type?

          def type=: (
            ModernTreasury::Models::payment_order_type
          ) -> ModernTreasury::Models::payment_order_type

          attr_accessor ultimate_originating_party_identifier: String?

          attr_accessor ultimate_originating_party_name: String?

          attr_accessor ultimate_receiving_party_identifier: String?

          attr_accessor ultimate_receiving_party_name: String?

          def initialize: (
            ?id: String,
            ?accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::Accounting,
            ?accounting_category_id: String?,
            ?accounting_ledger_class_id: String?,
            ?amount: Integer,
            ?charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::charge_bearer?,
            ?counterparty_id: String?,
            ?currency: ModernTreasury::Models::currency,
            ?description: String?,
            ?direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::direction,
            ?effective_date: Date,
            ?expires_at: Time?,
            ?fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::fallback_type,
            ?foreign_exchange_contract: String?,
            ?foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::foreign_exchange_indicator?,
            ?line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::LineItem],
            ?metadata: ::Hash[Symbol, String],
            ?nsf_protected: bool,
            ?originating_account_id: String,
            ?originating_party_name: String?,
            ?priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::priority,
            ?process_after: Time?,
            ?purpose: String?,
            ?receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount,
            ?receiving_account_id: String,
            ?remittance_information: String?,
            ?send_remittance_advice: bool?,
            ?statement_descriptor: String?,
            ?status: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::status,
            ?subtype: ModernTreasury::Models::payment_order_subtype?,
            ?type: ModernTreasury::Models::payment_order_type,
            ?ultimate_originating_party_identifier: String?,
            ?ultimate_originating_party_name: String?,
            ?ultimate_receiving_party_identifier: String?,
            ?ultimate_receiving_party_name: String?
          ) -> void

          def to_hash: -> {
            id: String,
            accounting: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::Accounting,
            accounting_category_id: String?,
            accounting_ledger_class_id: String?,
            amount: Integer,
            charge_bearer: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::charge_bearer?,
            counterparty_id: String?,
            currency: ModernTreasury::Models::currency,
            description: String?,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::direction,
            effective_date: Date,
            expires_at: Time?,
            fallback_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::fallback_type,
            foreign_exchange_contract: String?,
            foreign_exchange_indicator: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::foreign_exchange_indicator?,
            line_items: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::LineItem],
            metadata: ::Hash[Symbol, String],
            nsf_protected: bool,
            originating_account_id: String,
            originating_party_name: String?,
            priority: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::priority,
            process_after: Time?,
            purpose: String?,
            receiving_account: ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount,
            receiving_account_id: String,
            remittance_information: String?,
            send_remittance_advice: bool?,
            statement_descriptor: String?,
            status: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::status,
            subtype: ModernTreasury::Models::payment_order_subtype?,
            type: ModernTreasury::Models::payment_order_type,
            ultimate_originating_party_identifier: String?,
            ultimate_originating_party_name: String?,
            ultimate_receiving_party_identifier: String?,
            ultimate_receiving_party_name: String?
          }

          type accounting = { account_id: String?, class_id: String? }

          class Accounting < ModernTreasury::Internal::Type::BaseModel
            attr_accessor account_id: String?

            attr_accessor class_id: String?

            def initialize: (?account_id: String?, ?class_id: String?) -> void

            def to_hash: -> { account_id: String?, class_id: String? }
          end

          type charge_bearer = :shared | :sender | :receiver

          module ChargeBearer
            extend ModernTreasury::Internal::Type::Enum

            SHARED: :shared
            SENDER: :sender
            RECEIVER: :receiver

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::charge_bearer]
          end

          type direction = :credit | :debit

          module Direction
            extend ModernTreasury::Internal::Type::Enum

            CREDIT: :credit
            DEBIT: :debit

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::direction]
          end

          type fallback_type = :ach

          module FallbackType
            extend ModernTreasury::Internal::Type::Enum

            ACH: :ach

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::fallback_type]
          end

          type foreign_exchange_indicator =
            :fixed_to_variable | :variable_to_fixed

          module ForeignExchangeIndicator
            extend ModernTreasury::Internal::Type::Enum

            FIXED_TO_VARIABLE: :fixed_to_variable
            VARIABLE_TO_FIXED: :variable_to_fixed

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::foreign_exchange_indicator]
          end

          type line_item =
            {
              amount: Integer,
              accounting_category_id: String?,
              description: String?,
              metadata: ::Hash[Symbol, String]
            }

          class LineItem < ModernTreasury::Internal::Type::BaseModel
            attr_accessor amount: Integer

            attr_accessor accounting_category_id: String?

            attr_accessor description: String?

            attr_reader metadata: ::Hash[Symbol, String]?

            def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

            def initialize: (
              amount: Integer,
              ?accounting_category_id: String?,
              ?description: String?,
              ?metadata: ::Hash[Symbol, String]
            ) -> void

            def to_hash: -> {
              amount: Integer,
              accounting_category_id: String?,
              description: String?,
              metadata: ::Hash[Symbol, String]
            }
          end

          type priority = :high | :normal

          module Priority
            extend ModernTreasury::Internal::Type::Enum

            HIGH: :high
            NORMAL: :normal

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::priority]
          end

          type receiving_account =
            {
              account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail],
              account_type: ModernTreasury::Models::external_account_type,
              contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
              external_id: String?,
              ledger_account: ModernTreasury::LedgerAccountCreateRequest,
              metadata: ::Hash[Symbol, String],
              name: String?,
              party_address: ModernTreasury::AddressRequest,
              party_identifier: String,
              party_name: String,
              party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::party_type?,
              plaid_processor_token: String,
              routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail]
            }

          class ReceivingAccount < ModernTreasury::Internal::Type::BaseModel
            attr_reader account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail]?

            def account_details=: (
              ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail]
            ) -> ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail]

            attr_reader account_type: ModernTreasury::Models::external_account_type?

            def account_type=: (
              ModernTreasury::Models::external_account_type
            ) -> ModernTreasury::Models::external_account_type

            attr_reader contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest]?

            def contact_details=: (
              ::Array[ModernTreasury::ContactDetailCreateRequest]
            ) -> ::Array[ModernTreasury::ContactDetailCreateRequest]

            attr_accessor external_id: String?

            attr_reader ledger_account: ModernTreasury::LedgerAccountCreateRequest?

            def ledger_account=: (
              ModernTreasury::LedgerAccountCreateRequest
            ) -> ModernTreasury::LedgerAccountCreateRequest

            attr_reader metadata: ::Hash[Symbol, String]?

            def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

            attr_accessor name: String?

            attr_reader party_address: ModernTreasury::AddressRequest?

            def party_address=: (
              ModernTreasury::AddressRequest
            ) -> ModernTreasury::AddressRequest

            attr_reader party_identifier: String?

            def party_identifier=: (String) -> String

            attr_reader party_name: String?

            def party_name=: (String) -> String

            attr_accessor party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::party_type?

            attr_reader plaid_processor_token: String?

            def plaid_processor_token=: (String) -> String

            attr_reader routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail]?

            def routing_details=: (
              ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail]
            ) -> ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail]

            def initialize: (
              ?account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail],
              ?account_type: ModernTreasury::Models::external_account_type,
              ?contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
              ?external_id: String?,
              ?ledger_account: ModernTreasury::LedgerAccountCreateRequest,
              ?metadata: ::Hash[Symbol, String],
              ?name: String?,
              ?party_address: ModernTreasury::AddressRequest,
              ?party_identifier: String,
              ?party_name: String,
              ?party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::party_type?,
              ?plaid_processor_token: String,
              ?routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail]
            ) -> void

            def to_hash: -> {
              account_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail],
              account_type: ModernTreasury::Models::external_account_type,
              contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
              external_id: String?,
              ledger_account: ModernTreasury::LedgerAccountCreateRequest,
              metadata: ::Hash[Symbol, String],
              name: String?,
              party_address: ModernTreasury::AddressRequest,
              party_identifier: String,
              party_name: String,
              party_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::party_type?,
              plaid_processor_token: String,
              routing_details: ::Array[ModernTreasury::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail]
            }

            type account_detail =
              {
                account_number: String,
                account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail::account_number_type
              }

            class AccountDetail < ModernTreasury::Internal::Type::BaseModel
              attr_accessor account_number: String

              attr_reader account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail::account_number_type?

              def account_number_type=: (
                ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail::account_number_type
              ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail::account_number_type

              def initialize: (
                account_number: String,
                ?account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail::account_number_type
              ) -> void

              def to_hash: -> {
                account_number: String,
                account_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail::account_number_type
              }

              type account_number_type =
                :au_number
                | :base_address
                | :clabe
                | :ethereum_address
                | :hk_number
                | :iban
                | :id_number
                | :nz_number
                | :other
                | :pan
                | :polygon_address
                | :sg_number
                | :solana_address
                | :wallet_address

              module AccountNumberType
                extend ModernTreasury::Internal::Type::Enum

                AU_NUMBER: :au_number
                BASE_ADDRESS: :base_address
                CLABE: :clabe
                ETHEREUM_ADDRESS: :ethereum_address
                HK_NUMBER: :hk_number
                IBAN: :iban
                ID_NUMBER: :id_number
                NZ_NUMBER: :nz_number
                OTHER: :other
                PAN: :pan
                POLYGON_ADDRESS: :polygon_address
                SG_NUMBER: :sg_number
                SOLANA_ADDRESS: :solana_address
                WALLET_ADDRESS: :wallet_address

                def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::AccountDetail::account_number_type]
              end
            end

            type party_type = :business | :individual

            module PartyType
              extend ModernTreasury::Internal::Type::Enum

              BUSINESS: :business
              INDIVIDUAL: :individual

              def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::party_type]
            end

            type routing_detail =
              {
                routing_number: String,
                routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::routing_number_type,
                payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::payment_type
              }

            class RoutingDetail < ModernTreasury::Internal::Type::BaseModel
              attr_accessor routing_number: String

              attr_accessor routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::routing_number_type

              attr_reader payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::payment_type?

              def payment_type=: (
                ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::payment_type
              ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::payment_type

              def initialize: (
                routing_number: String,
                routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::routing_number_type,
                ?payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::payment_type
              ) -> void

              def to_hash: -> {
                routing_number: String,
                routing_number_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::routing_number_type,
                payment_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::payment_type
              }

              type routing_number_type =
                :aba
                | :au_bsb
                | :br_codigo
                | :ca_cpa
                | :chips
                | :cnaps
                | :dk_interbank_clearing_code
                | :gb_sort_code
                | :hk_interbank_clearing_code
                | :hu_interbank_clearing_code
                | :id_sknbi_code
                | :il_bank_code
                | :in_ifsc
                | :jp_zengin_code
                | :my_branch_code
                | :mx_bank_identifier
                | :nz_national_clearing_code
                | :pl_national_clearing_code
                | :se_bankgiro_clearing_code
                | :sg_interbank_clearing_code
                | :swift
                | :za_national_clearing_code

              module RoutingNumberType
                extend ModernTreasury::Internal::Type::Enum

                ABA: :aba
                AU_BSB: :au_bsb
                BR_CODIGO: :br_codigo
                CA_CPA: :ca_cpa
                CHIPS: :chips
                CNAPS: :cnaps
                DK_INTERBANK_CLEARING_CODE: :dk_interbank_clearing_code
                GB_SORT_CODE: :gb_sort_code
                HK_INTERBANK_CLEARING_CODE: :hk_interbank_clearing_code
                HU_INTERBANK_CLEARING_CODE: :hu_interbank_clearing_code
                ID_SKNBI_CODE: :id_sknbi_code
                IL_BANK_CODE: :il_bank_code
                IN_IFSC: :in_ifsc
                JP_ZENGIN_CODE: :jp_zengin_code
                MY_BRANCH_CODE: :my_branch_code
                MX_BANK_IDENTIFIER: :mx_bank_identifier
                NZ_NATIONAL_CLEARING_CODE: :nz_national_clearing_code
                PL_NATIONAL_CLEARING_CODE: :pl_national_clearing_code
                SE_BANKGIRO_CLEARING_CODE: :se_bankgiro_clearing_code
                SG_INTERBANK_CLEARING_CODE: :sg_interbank_clearing_code
                SWIFT: :swift
                ZA_NATIONAL_CLEARING_CODE: :za_national_clearing_code

                def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::routing_number_type]
              end

              type payment_type =
                :ach
                | :au_becs
                | :bacs
                | :base
                | :book
                | :card
                | :chats
                | :check
                | :cross_border
                | :dk_nets
                | :eft
                | :ethereum
                | :gb_fps
                | :hu_ics
                | :interac
                | :masav
                | :mx_ccen
                | :neft
                | :nics
                | :nz_becs
                | :pl_elixir
                | :polygon
                | :provxchange
                | :ro_sent
                | :rtp
                | :se_bankgirot
                | :sen
                | :sepa
                | :sg_giro
                | :sic
                | :signet
                | :sknbi
                | :solana
                | :wire
                | :zengin

              module PaymentType
                extend ModernTreasury::Internal::Type::Enum

                ACH: :ach
                AU_BECS: :au_becs
                BACS: :bacs
                BASE: :base
                BOOK: :book
                CARD: :card
                CHATS: :chats
                CHECK: :check
                CROSS_BORDER: :cross_border
                DK_NETS: :dk_nets
                EFT: :eft
                ETHEREUM: :ethereum
                GB_FPS: :gb_fps
                HU_ICS: :hu_ics
                INTERAC: :interac
                MASAV: :masav
                MX_CCEN: :mx_ccen
                NEFT: :neft
                NICS: :nics
                NZ_BECS: :nz_becs
                PL_ELIXIR: :pl_elixir
                POLYGON: :polygon
                PROVXCHANGE: :provxchange
                RO_SENT: :ro_sent
                RTP: :rtp
                SE_BANKGIROT: :se_bankgirot
                SEN: :sen
                SEPA: :sepa
                SG_GIRO: :sg_giro
                SIC: :sic
                SIGNET: :signet
                SKNBI: :sknbi
                SOLANA: :solana
                WIRE: :wire
                ZENGIN: :zengin

                def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::ReceivingAccount::RoutingDetail::payment_type]
              end
            end
          end

          type status =
            :approved
            | :cancelled
            | :completed
            | :denied
            | :failed
            | :needs_approval
            | :pending
            | :processing
            | :returned
            | :reversed
            | :sent
            | :stopped

          module Status
            extend ModernTreasury::Internal::Type::Enum

            APPROVED: :approved
            CANCELLED: :cancelled
            COMPLETED: :completed
            DENIED: :denied
            FAILED: :failed
            NEEDS_APPROVAL: :needs_approval
            PENDING: :pending
            PROCESSING: :processing
            RETURNED: :returned
            REVERSED: :reversed
            SENT: :sent
            STOPPED: :stopped

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::PaymentOrderUpdateRequestWithID::status]
          end
        end

        type expected_payment_update_request_with_id =
          {
            id: String,
            amount_lower_bound: Integer?,
            amount_upper_bound: Integer?,
            counterparty_id: String?,
            currency: ModernTreasury::Models::currency?,
            date_lower_bound: Date?,
            date_upper_bound: Date?,
            description: String?,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::direction?,
            external_id: String?,
            internal_account_id: String?,
            metadata: ::Hash[Symbol, String],
            reconciliation_filters: top?,
            reconciliation_groups: top?,
            reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?,
            remittance_information: String?,
            statement_descriptor: String?,
            status: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::status?,
            type: ModernTreasury::Models::expected_payment_type?
          }

        class ExpectedPaymentUpdateRequestWithID < ModernTreasury::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          attr_accessor amount_lower_bound: Integer?

          attr_accessor amount_upper_bound: Integer?

          attr_accessor counterparty_id: String?

          attr_accessor currency: ModernTreasury::Models::currency?

          attr_accessor date_lower_bound: Date?

          attr_accessor date_upper_bound: Date?

          attr_accessor description: String?

          attr_accessor direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::direction?

          attr_accessor external_id: String?

          attr_accessor internal_account_id: String?

          attr_reader metadata: ::Hash[Symbol, String]?

          def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_accessor reconciliation_filters: top?

          attr_accessor reconciliation_groups: top?

          attr_accessor reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?

          attr_accessor remittance_information: String?

          attr_accessor statement_descriptor: String?

          attr_accessor status: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::status?

          attr_accessor type: ModernTreasury::Models::expected_payment_type?

          def initialize: (
            ?id: String,
            ?amount_lower_bound: Integer?,
            ?amount_upper_bound: Integer?,
            ?counterparty_id: String?,
            ?currency: ModernTreasury::Models::currency?,
            ?date_lower_bound: Date?,
            ?date_upper_bound: Date?,
            ?description: String?,
            ?direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::direction?,
            ?external_id: String?,
            ?internal_account_id: String?,
            ?metadata: ::Hash[Symbol, String],
            ?reconciliation_filters: top?,
            ?reconciliation_groups: top?,
            ?reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?,
            ?remittance_information: String?,
            ?statement_descriptor: String?,
            ?status: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::status?,
            ?type: ModernTreasury::Models::expected_payment_type?
          ) -> void

          def to_hash: -> {
            id: String,
            amount_lower_bound: Integer?,
            amount_upper_bound: Integer?,
            counterparty_id: String?,
            currency: ModernTreasury::Models::currency?,
            date_lower_bound: Date?,
            date_upper_bound: Date?,
            description: String?,
            direction: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::direction?,
            external_id: String?,
            internal_account_id: String?,
            metadata: ::Hash[Symbol, String],
            reconciliation_filters: top?,
            reconciliation_groups: top?,
            reconciliation_rule_variables: ::Array[ModernTreasury::ReconciliationRule]?,
            remittance_information: String?,
            statement_descriptor: String?,
            status: ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::status?,
            type: ModernTreasury::Models::expected_payment_type?
          }

          type direction = :credit | :debit

          module Direction
            extend ModernTreasury::Internal::Type::Enum

            CREDIT: :credit
            DEBIT: :debit

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::direction]
          end

          type status = :reconciled

          module Status
            extend ModernTreasury::Internal::Type::Enum

            RECONCILED: :reconciled

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::ExpectedPaymentUpdateRequestWithID::status]
          end
        end

        type transaction_update_request_with_id =
          { id: String, metadata: ::Hash[Symbol, String] }

        class TransactionUpdateRequestWithID < ModernTreasury::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          attr_reader metadata: ::Hash[Symbol, String]?

          def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          def initialize: (
            ?id: String,
            ?metadata: ::Hash[Symbol, String]
          ) -> void

          def to_hash: -> { id: String, metadata: ::Hash[Symbol, String] }
        end

        type ledger_transaction_update_request_with_id =
          {
            id: String,
            description: String?,
            effective_at: Time,
            ledger_entries: ::Array[ModernTreasury::LedgerEntryCreateRequest],
            ledgerable_id: String,
            ledgerable_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::ledgerable_type,
            metadata: ::Hash[Symbol, String],
            status: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::status
          }

        class LedgerTransactionUpdateRequestWithID < ModernTreasury::Internal::Type::BaseModel
          attr_reader id: String?

          def id=: (String) -> String

          attr_accessor description: String?

          attr_reader effective_at: Time?

          def effective_at=: (Time) -> Time

          attr_reader ledger_entries: ::Array[ModernTreasury::LedgerEntryCreateRequest]?

          def ledger_entries=: (
            ::Array[ModernTreasury::LedgerEntryCreateRequest]
          ) -> ::Array[ModernTreasury::LedgerEntryCreateRequest]

          attr_reader ledgerable_id: String?

          def ledgerable_id=: (String) -> String

          attr_reader ledgerable_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::ledgerable_type?

          def ledgerable_type=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::ledgerable_type
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::ledgerable_type

          attr_reader metadata: ::Hash[Symbol, String]?

          def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

          attr_reader status: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::status?

          def status=: (
            ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::status
          ) -> ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::status

          def initialize: (
            ?id: String,
            ?description: String?,
            ?effective_at: Time,
            ?ledger_entries: ::Array[ModernTreasury::LedgerEntryCreateRequest],
            ?ledgerable_id: String,
            ?ledgerable_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::ledgerable_type,
            ?metadata: ::Hash[Symbol, String],
            ?status: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::status
          ) -> void

          def to_hash: -> {
            id: String,
            description: String?,
            effective_at: Time,
            ledger_entries: ::Array[ModernTreasury::LedgerEntryCreateRequest],
            ledgerable_id: String,
            ledgerable_type: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::ledgerable_type,
            metadata: ::Hash[Symbol, String],
            status: ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::status
          }

          type ledgerable_type =
            :expected_payment
            | :incoming_payment_detail
            | :payment_order
            | :return
            | :reversal

          module LedgerableType
            extend ModernTreasury::Internal::Type::Enum

            EXPECTED_PAYMENT: :expected_payment
            INCOMING_PAYMENT_DETAIL: :incoming_payment_detail
            PAYMENT_ORDER: :payment_order
            RETURN: :return
            REVERSAL: :reversal

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::ledgerable_type]
          end

          type status = :archived | :pending | :posted

          module Status
            extend ModernTreasury::Internal::Type::Enum

            ARCHIVED: :archived
            PENDING: :pending
            POSTED: :posted

            def self?.values: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::Resource::LedgerTransactionUpdateRequestWithID::status]
          end
        end

        def self?.variants: -> ::Array[ModernTreasury::Models::BulkRequestCreateParams::resource]
      end
    end
  end
end
