module ModernTreasury
  module Models
    type ledger_account_list_params =
      {
        id: Array[String],
        after_cursor: String?,
        available_balance_amount: ModernTreasury::Models::LedgerAccountListParams::AvailableBalanceAmount,
        balances: ModernTreasury::Models::LedgerAccountListParams::Balances,
        created_at: Hash[Symbol, Time],
        currency: String,
        ledger_account_category_id: String,
        ledger_id: String,
        metadata: Hash[Symbol, String],
        name: Array[String],
        pending_balance_amount: ModernTreasury::Models::LedgerAccountListParams::PendingBalanceAmount,
        per_page: Integer,
        posted_balance_amount: ModernTreasury::Models::LedgerAccountListParams::PostedBalanceAmount,
        updated_at: Hash[Symbol, Time]
      }
      & ModernTreasury::request_parameters

    class LedgerAccountListParams < ModernTreasury::BaseModel
      extend ModernTreasury::RequestParameters::Converter
      include ModernTreasury::RequestParameters

      attr_reader id: Array[String]

      def id=: (Array[String]) -> void

      attr_accessor after_cursor: String?

      attr_reader available_balance_amount: ModernTreasury::Models::LedgerAccountListParams::AvailableBalanceAmount?

      def available_balance_amount=: (
        ModernTreasury::Models::LedgerAccountListParams::AvailableBalanceAmount
      ) -> void

      attr_reader balances: ModernTreasury::Models::LedgerAccountListParams::Balances?

      def balances=: (
        ModernTreasury::Models::LedgerAccountListParams::Balances
      ) -> void

      attr_reader created_at: Hash[Symbol, Time]?

      def created_at=: (Hash[Symbol, Time]) -> void

      attr_reader currency: String?

      def currency=: (String) -> void

      attr_reader ledger_account_category_id: String?

      def ledger_account_category_id=: (String) -> void

      attr_reader ledger_id: String?

      def ledger_id=: (String) -> void

      attr_reader metadata: Hash[Symbol, String]?

      def metadata=: (Hash[Symbol, String]) -> void

      attr_reader name: Array[String]

      def name=: (Array[String]) -> void

      attr_reader pending_balance_amount: ModernTreasury::Models::LedgerAccountListParams::PendingBalanceAmount?

      def pending_balance_amount=: (
        ModernTreasury::Models::LedgerAccountListParams::PendingBalanceAmount
      ) -> void

      attr_reader per_page: Integer?

      def per_page=: (Integer) -> void

      attr_reader posted_balance_amount: ModernTreasury::Models::LedgerAccountListParams::PostedBalanceAmount?

      def posted_balance_amount=: (
        ModernTreasury::Models::LedgerAccountListParams::PostedBalanceAmount
      ) -> void

      attr_reader updated_at: Hash[Symbol, Time]?

      def updated_at=: (Hash[Symbol, Time]) -> void

      def initialize:
        (
          id: Array[String],
          after_cursor: String?,
          available_balance_amount: ModernTreasury::Models::LedgerAccountListParams::AvailableBalanceAmount,
          balances: ModernTreasury::Models::LedgerAccountListParams::Balances,
          created_at: Hash[Symbol, Time],
          currency: String,
          ledger_account_category_id: String,
          ledger_id: String,
          metadata: Hash[Symbol, String],
          name: Array[String],
          pending_balance_amount: ModernTreasury::Models::LedgerAccountListParams::PendingBalanceAmount,
          per_page: Integer,
          posted_balance_amount: ModernTreasury::Models::LedgerAccountListParams::PostedBalanceAmount,
          updated_at: Hash[Symbol, Time],
          request_options: ModernTreasury::request_opts
        ) -> void
        | (
          ?ModernTreasury::Models::ledger_account_list_params
          | ModernTreasury::BaseModel data
        ) -> void

      def to_h: -> ModernTreasury::Models::ledger_account_list_params

      type available_balance_amount =
        {
          eq: Integer,
          gt: Integer,
          gte: Integer,
          lt: Integer,
          lte: Integer,
          not_eq: Integer
        }

      class AvailableBalanceAmount < ModernTreasury::BaseModel
        attr_reader eq: Integer?

        def eq=: (Integer) -> void

        attr_reader gt: Integer?

        def gt=: (Integer) -> void

        attr_reader gte: Integer?

        def gte=: (Integer) -> void

        attr_reader lt: Integer?

        def lt=: (Integer) -> void

        attr_reader lte: Integer?

        def lte=: (Integer) -> void

        attr_reader not_eq: Integer?

        def not_eq=: (Integer) -> void

        def initialize:
          (
            eq: Integer,
            gt: Integer,
            gte: Integer,
            lt: Integer,
            lte: Integer,
            not_eq: Integer
          ) -> void
          | (
            ?ModernTreasury::Models::LedgerAccountListParams::available_balance_amount
            | ModernTreasury::BaseModel data
          ) -> void

        def to_h: -> ModernTreasury::Models::LedgerAccountListParams::available_balance_amount
      end

      type balances =
        {
          as_of_date: Date,
          effective_at: Time,
          effective_at_lower_bound: Time,
          effective_at_upper_bound: Time
        }

      class Balances < ModernTreasury::BaseModel
        attr_reader as_of_date: Date?

        def as_of_date=: (Date) -> void

        attr_reader effective_at: Time?

        def effective_at=: (Time) -> void

        attr_reader effective_at_lower_bound: Time?

        def effective_at_lower_bound=: (Time) -> void

        attr_reader effective_at_upper_bound: Time?

        def effective_at_upper_bound=: (Time) -> void

        def initialize:
          (
            as_of_date: Date,
            effective_at: Time,
            effective_at_lower_bound: Time,
            effective_at_upper_bound: Time
          ) -> void
          | (
            ?ModernTreasury::Models::LedgerAccountListParams::balances
            | ModernTreasury::BaseModel data
          ) -> void

        def to_h: -> ModernTreasury::Models::LedgerAccountListParams::balances
      end

      type pending_balance_amount =
        {
          eq: Integer,
          gt: Integer,
          gte: Integer,
          lt: Integer,
          lte: Integer,
          not_eq: Integer
        }

      class PendingBalanceAmount < ModernTreasury::BaseModel
        attr_reader eq: Integer?

        def eq=: (Integer) -> void

        attr_reader gt: Integer?

        def gt=: (Integer) -> void

        attr_reader gte: Integer?

        def gte=: (Integer) -> void

        attr_reader lt: Integer?

        def lt=: (Integer) -> void

        attr_reader lte: Integer?

        def lte=: (Integer) -> void

        attr_reader not_eq: Integer?

        def not_eq=: (Integer) -> void

        def initialize:
          (
            eq: Integer,
            gt: Integer,
            gte: Integer,
            lt: Integer,
            lte: Integer,
            not_eq: Integer
          ) -> void
          | (
            ?ModernTreasury::Models::LedgerAccountListParams::pending_balance_amount
            | ModernTreasury::BaseModel data
          ) -> void

        def to_h: -> ModernTreasury::Models::LedgerAccountListParams::pending_balance_amount
      end

      type posted_balance_amount =
        {
          eq: Integer,
          gt: Integer,
          gte: Integer,
          lt: Integer,
          lte: Integer,
          not_eq: Integer
        }

      class PostedBalanceAmount < ModernTreasury::BaseModel
        attr_reader eq: Integer?

        def eq=: (Integer) -> void

        attr_reader gt: Integer?

        def gt=: (Integer) -> void

        attr_reader gte: Integer?

        def gte=: (Integer) -> void

        attr_reader lt: Integer?

        def lt=: (Integer) -> void

        attr_reader lte: Integer?

        def lte=: (Integer) -> void

        attr_reader not_eq: Integer?

        def not_eq=: (Integer) -> void

        def initialize:
          (
            eq: Integer,
            gt: Integer,
            gte: Integer,
            lt: Integer,
            lte: Integer,
            not_eq: Integer
          ) -> void
          | (
            ?ModernTreasury::Models::LedgerAccountListParams::posted_balance_amount
            | ModernTreasury::BaseModel data
          ) -> void

        def to_h: -> ModernTreasury::Models::LedgerAccountListParams::posted_balance_amount
      end
    end
  end
end
