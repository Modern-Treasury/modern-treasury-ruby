module ModernTreasury
  module Models
    type ledger_event_handler_list_params =
      {
        after_cursor: String?,
        created_at: ::Hash[Symbol, Time],
        metadata: ::Hash[Symbol, String],
        name: String,
        per_page: Integer
      }
      & ModernTreasury::Internal::Type::request_parameters

    class LedgerEventHandlerListParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor after_cursor: String?

      attr_reader created_at: ::Hash[Symbol, Time]?

      def created_at=: (::Hash[Symbol, Time]) -> ::Hash[Symbol, Time]

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_reader name: String?

      def name=: (String) -> String

      attr_reader per_page: Integer?

      def per_page=: (Integer) -> Integer

      def initialize: (
        ?after_cursor: String?,
        ?created_at: ::Hash[Symbol, Time],
        ?metadata: ::Hash[Symbol, String],
        ?name: String,
        ?per_page: Integer,
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> ModernTreasury::Models::ledger_event_handler_list_params
    end
  end
end
