module ModernTreasury
  module Models
    type ledger_event_handler_list_params =
      {
        after_cursor: String?,
        created_at: Hash[Symbol, Time],
        metadata: Hash[Symbol, String],
        name: String,
        per_page: Integer
      }
      & ModernTreasury::request_parameters

    class LedgerEventHandlerListParams < ModernTreasury::BaseModel
      extend ModernTreasury::RequestParameters::Converter
      include ModernTreasury::RequestParameters

      attr_accessor after_cursor: String?

      attr_reader created_at: Hash[Symbol, Time]?

      def created_at=: (Hash[Symbol, Time]) -> void

      attr_reader metadata: Hash[Symbol, String]?

      def metadata=: (Hash[Symbol, String]) -> void

      attr_reader name: String?

      def name=: (String) -> void

      attr_reader per_page: Integer?

      def per_page=: (Integer) -> void

      def initialize:
        (
          after_cursor: String?,
          created_at: Hash[Symbol, Time],
          metadata: Hash[Symbol, String],
          name: String,
          per_page: Integer,
          request_options: ModernTreasury::request_opts
        ) -> void
        | (
          ?ModernTreasury::Models::ledger_event_handler_list_params
          | ModernTreasury::BaseModel data
        ) -> void

      def to_h: -> ModernTreasury::Models::ledger_event_handler_list_params
    end
  end
end
