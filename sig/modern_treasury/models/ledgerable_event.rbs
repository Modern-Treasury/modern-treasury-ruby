module ModernTreasury
  module Models
    type ledgerable_event =
      {
        id: String,
        created_at: Time,
        custom_data: top?,
        description: String?,
        ledger_event_handler_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String]?,
        name: String,
        object: String,
        updated_at: Time
      }

    class LedgerableEvent < ModernTreasury::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor created_at: Time

      attr_accessor custom_data: top?

      attr_accessor description: String?

      attr_accessor ledger_event_handler_id: String

      attr_accessor live_mode: bool

      attr_accessor metadata: ::Hash[Symbol, String]?

      attr_accessor name: String

      attr_accessor object: String

      attr_accessor updated_at: Time

      def initialize: (
        id: String,
        created_at: Time,
        custom_data: top?,
        description: String?,
        ledger_event_handler_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String]?,
        name: String,
        object: String,
        updated_at: Time
      ) -> void

      def to_hash: -> ModernTreasury::Models::ledgerable_event
    end
  end
end
