module ModernTreasury
  module Models
    type address_request =
      {
        country: String?,
        :line1 => String?,
        :line2 => String?,
        locality: String?,
        postal_code: String?,
        region: String?
      }

    class AddressRequest < ModernTreasury::Internal::Type::BaseModel
      attr_accessor country: String?

      attr_accessor line1: String?

      attr_accessor line2: String?

      attr_accessor locality: String?

      attr_accessor postal_code: String?

      attr_accessor region: String?

      def initialize: (
        ?country: String?,
        ?line1: String?,
        ?line2: String?,
        ?locality: String?,
        ?postal_code: String?,
        ?region: String?
      ) -> void

      def to_hash: -> {
        country: String?,
        :line1 => String?,
        :line2 => String?,
        locality: String?,
        postal_code: String?,
        region: String?
      }
    end
  end
end
