module ModernTreasury
  module Models
    type line_item_list_params =
      {
        itemizable_type: ModernTreasury::Models::LineItemListParams::itemizable_type,
        after_cursor: String?,
        per_page: Integer
      }
      & ModernTreasury::Internal::Type::request_parameters

    class LineItemListParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor itemizable_type: ModernTreasury::Models::LineItemListParams::itemizable_type

      attr_accessor after_cursor: String?

      attr_reader per_page: Integer?

      def per_page=: (Integer) -> Integer

      def initialize: (
        itemizable_type: ModernTreasury::Models::LineItemListParams::itemizable_type,
        ?after_cursor: String?,
        ?per_page: Integer,
        ?request_options: ModernTreasury::request_opts
      ) -> void

      type itemizable_type = :expected_payments | :payment_orders

      module ItemizableType
        extend ModernTreasury::Internal::Type::Enum

        EXPECTED_PAYMENTS: :expected_payments
        PAYMENT_ORDERS: :payment_orders

        def self?.values: -> ::Array[ModernTreasury::Models::LineItemListParams::itemizable_type]
      end
    end
  end
end
