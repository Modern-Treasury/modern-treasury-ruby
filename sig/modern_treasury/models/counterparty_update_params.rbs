module ModernTreasury
  module Models
    type counterparty_update_params =
      {
        email: String,
        legal_entity_id: String?,
        metadata: ::Hash[Symbol, String],
        name: String,
        send_remittance_advice: bool,
        taxpayer_identifier: String
      }
      & ModernTreasury::request_parameters

    class CounterpartyUpdateParams < ModernTreasury::BaseModel
      extend ModernTreasury::RequestParameters::Converter
      include ModernTreasury::RequestParameters

      attr_reader email: String?

      def email=: (String) -> String

      attr_accessor legal_entity_id: String?

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_reader name: String?

      def name=: (String) -> String

      attr_reader send_remittance_advice: bool?

      def send_remittance_advice=: (bool) -> bool

      attr_reader taxpayer_identifier: String?

      def taxpayer_identifier=: (String) -> String

      def initialize:
        (
          email: String,
          legal_entity_id: String?,
          metadata: ::Hash[Symbol, String],
          name: String,
          send_remittance_advice: bool,
          taxpayer_identifier: String,
          request_options: ModernTreasury::request_opts
        ) -> void
        | (
          ?ModernTreasury::Models::counterparty_update_params
          | ModernTreasury::BaseModel data
        ) -> void

      def to_hash: -> ModernTreasury::Models::counterparty_update_params
    end
  end
end
