module ModernTreasury
  module Models
    type ledgerable_event_create_params =
      {
        name: String,
        custom_data: top?,
        description: String?,
        metadata: ::Hash[Symbol, String]
      }
      & ModernTreasury::request_parameters

    class LedgerableEventCreateParams < ModernTreasury::BaseModel
      extend ModernTreasury::Type::RequestParameters::Converter
      include ModernTreasury::RequestParameters

      attr_accessor name: String

      attr_accessor custom_data: top?

      attr_accessor description: String?

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      def initialize: (
        name: String,
        ?custom_data: top?,
        ?description: String?,
        ?metadata: ::Hash[Symbol, String],
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> ModernTreasury::Models::ledgerable_event_create_params
    end
  end
end
