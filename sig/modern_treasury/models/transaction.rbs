module ModernTreasury
  module Models
    type transaction =
      {
        id: String,
        amount: Integer,
        as_of_date: Date?,
        as_of_time: Time?,
        as_of_timezone: String?,
        created_at: Time,
        currency: ModernTreasury::Models::currency,
        custom_identifiers: ::Hash[Symbol, String],
        direction: String,
        discarded_at: Time?,
        foreign_exchange_rate: ModernTreasury::ForeignExchangeRate?,
        internal_account_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String],
        object: String,
        posted: bool,
        reconciled: bool,
        type: ModernTreasury::Models::Transaction::type_,
        updated_at: Time,
        vendor_code: String?,
        vendor_code_type: ModernTreasury::Models::Transaction::vendor_code_type?,
        vendor_customer_id: String?,
        vendor_id: String?,
        details: ::Hash[Symbol, String],
        vendor_description: String?
      }

    class Transaction < ModernTreasury::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor amount: Integer

      attr_accessor as_of_date: Date?

      attr_accessor as_of_time: Time?

      attr_accessor as_of_timezone: String?

      attr_accessor created_at: Time

      attr_accessor currency: ModernTreasury::Models::currency

      attr_accessor custom_identifiers: ::Hash[Symbol, String]

      attr_accessor direction: String

      attr_accessor discarded_at: Time?

      attr_accessor foreign_exchange_rate: ModernTreasury::ForeignExchangeRate?

      attr_accessor internal_account_id: String

      attr_accessor live_mode: bool

      attr_accessor metadata: ::Hash[Symbol, String]

      attr_accessor object: String

      attr_accessor posted: bool

      attr_accessor reconciled: bool

      attr_accessor type: ModernTreasury::Models::Transaction::type_

      attr_accessor updated_at: Time

      attr_accessor vendor_code: String?

      attr_accessor vendor_code_type: ModernTreasury::Models::Transaction::vendor_code_type?

      attr_accessor vendor_customer_id: String?

      attr_accessor vendor_id: String?

      attr_reader details: ::Hash[Symbol, String]?

      def details=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_accessor vendor_description: String?

      def initialize: (
        id: String,
        amount: Integer,
        as_of_date: Date?,
        as_of_time: Time?,
        as_of_timezone: String?,
        created_at: Time,
        currency: ModernTreasury::Models::currency,
        custom_identifiers: ::Hash[Symbol, String],
        direction: String,
        discarded_at: Time?,
        foreign_exchange_rate: ModernTreasury::ForeignExchangeRate?,
        internal_account_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String],
        object: String,
        posted: bool,
        reconciled: bool,
        type: ModernTreasury::Models::Transaction::type_,
        updated_at: Time,
        vendor_code: String?,
        vendor_code_type: ModernTreasury::Models::Transaction::vendor_code_type?,
        vendor_customer_id: String?,
        vendor_id: String?,
        ?details: ::Hash[Symbol, String],
        ?vendor_description: String?
      ) -> void

      def to_hash: -> {
        id: String,
        amount: Integer,
        as_of_date: Date?,
        as_of_time: Time?,
        as_of_timezone: String?,
        created_at: Time,
        currency: ModernTreasury::Models::currency,
        custom_identifiers: ::Hash[Symbol, String],
        direction: String,
        discarded_at: Time?,
        foreign_exchange_rate: ModernTreasury::ForeignExchangeRate?,
        internal_account_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String],
        object: String,
        posted: bool,
        reconciled: bool,
        type: ModernTreasury::Models::Transaction::type_,
        updated_at: Time,
        vendor_code: String?,
        vendor_code_type: ModernTreasury::Models::Transaction::vendor_code_type?,
        vendor_customer_id: String?,
        vendor_id: String?,
        details: ::Hash[Symbol, String],
        vendor_description: String?
      }

      type type_ =
        :ach
        | :au_becs
        | :bacs
        | :base
        | :book
        | :card
        | :chats
        | :check
        | :cross_border
        | :dk_nets
        | :eft
        | :ethereum
        | :hu_ics
        | :interac
        | :masav
        | :mx_ccen
        | :neft
        | :nics
        | :nz_becs
        | :pl_elixir
        | :polygon
        | :provxchange
        | :ro_sent
        | :rtp
        | :se_bankgirot
        | :sen
        | :sepa
        | :sg_giro
        | :sic
        | :signet
        | :sknbi
        | :solana
        | :wire
        | :zengin
        | :other

      module Type
        extend ModernTreasury::Internal::Type::Enum

        ACH: :ach
        AU_BECS: :au_becs
        BACS: :bacs
        BASE: :base
        BOOK: :book
        CARD: :card
        CHATS: :chats
        CHECK: :check
        CROSS_BORDER: :cross_border
        DK_NETS: :dk_nets
        EFT: :eft
        ETHEREUM: :ethereum
        HU_ICS: :hu_ics
        INTERAC: :interac
        MASAV: :masav
        MX_CCEN: :mx_ccen
        NEFT: :neft
        NICS: :nics
        NZ_BECS: :nz_becs
        PL_ELIXIR: :pl_elixir
        POLYGON: :polygon
        PROVXCHANGE: :provxchange
        RO_SENT: :ro_sent
        RTP: :rtp
        SE_BANKGIROT: :se_bankgirot
        SEN: :sen
        SEPA: :sepa
        SG_GIRO: :sg_giro
        SIC: :sic
        SIGNET: :signet
        SKNBI: :sknbi
        SOLANA: :solana
        WIRE: :wire
        ZENGIN: :zengin
        OTHER: :other

        def self?.values: -> ::Array[ModernTreasury::Models::Transaction::type_]
      end

      type vendor_code_type =
        :bai2
        | :banking_circle
        | :bankprov
        | :bnk_dev
        | :brale
        | :bridge
        | :cleartouch
        | :column
        | :cross_river
        | :currencycloud
        | :dc_bank
        | :dwolla
        | :evolve
        | :fake_vendor
        | :goldman_sachs
        | :hifi
        | :iso20022
        | :jpmc
        | :mx
        | :paypal
        | :plaid
        | :pnc
        | :signet
        | :silvergate
        | :swift
        | :us_bank
        | :user
        | :western_alliance

      module VendorCodeType
        extend ModernTreasury::Internal::Type::Enum

        BAI2: :bai2
        BANKING_CIRCLE: :banking_circle
        BANKPROV: :bankprov
        BNK_DEV: :bnk_dev
        BRALE: :brale
        BRIDGE: :bridge
        CLEARTOUCH: :cleartouch
        COLUMN: :column
        CROSS_RIVER: :cross_river
        CURRENCYCLOUD: :currencycloud
        DC_BANK: :dc_bank
        DWOLLA: :dwolla
        EVOLVE: :evolve
        FAKE_VENDOR: :fake_vendor
        GOLDMAN_SACHS: :goldman_sachs
        HIFI: :hifi
        ISO20022: :iso20022
        JPMC: :jpmc
        MX: :mx
        PAYPAL: :paypal
        PLAID: :plaid
        PNC: :pnc
        SIGNET: :signet
        SILVERGATE: :silvergate
        SWIFT: :swift
        US_BANK: :us_bank
        USER: :user
        WESTERN_ALLIANCE: :western_alliance

        def self?.values: -> ::Array[ModernTreasury::Models::Transaction::vendor_code_type]
      end
    end
  end
end
