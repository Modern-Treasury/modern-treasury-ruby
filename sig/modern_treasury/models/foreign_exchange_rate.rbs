module ModernTreasury
  module Models
    type foreign_exchange_rate =
      {
        base_amount: Integer,
        base_currency: ModernTreasury::Models::currency,
        exponent: Integer,
        rate_string: String,
        target_amount: Integer,
        target_currency: ModernTreasury::Models::currency,
        value: Integer
      }

    class ForeignExchangeRate < ModernTreasury::Internal::Type::BaseModel
      attr_accessor base_amount: Integer

      attr_accessor base_currency: ModernTreasury::Models::currency

      attr_accessor exponent: Integer

      attr_accessor rate_string: String

      attr_accessor target_amount: Integer

      attr_accessor target_currency: ModernTreasury::Models::currency

      attr_accessor value: Integer

      def initialize: (
        base_amount: Integer,
        base_currency: ModernTreasury::Models::currency,
        exponent: Integer,
        rate_string: String,
        target_amount: Integer,
        target_currency: ModernTreasury::Models::currency,
        value: Integer
      ) -> void

      def to_hash: -> {
        base_amount: Integer,
        base_currency: ModernTreasury::Models::currency,
        exponent: Integer,
        rate_string: String,
        target_amount: Integer,
        target_currency: ModernTreasury::Models::currency,
        value: Integer
      }
    end
  end
end
