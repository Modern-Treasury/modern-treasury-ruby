module ModernTreasury
  module Models
    type ledger_account_settlement_list_params =
      {
        id: ::Array[String],
        after_cursor: String?,
        created_at: ::Hash[Symbol, Time],
        ledger_id: String,
        ledger_transaction_id: String,
        metadata: ::Hash[Symbol, String],
        per_page: Integer,
        settled_ledger_account_id: String,
        settlement_entry_direction: String,
        updated_at: ::Hash[Symbol, Time]
      }
      & ModernTreasury::Internal::Type::request_parameters

    class LedgerAccountSettlementListParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_reader id: ::Array[String]?

      def id=: (::Array[String]) -> ::Array[String]

      attr_accessor after_cursor: String?

      attr_reader created_at: ::Hash[Symbol, Time]?

      def created_at=: (::Hash[Symbol, Time]) -> ::Hash[Symbol, Time]

      attr_reader ledger_id: String?

      def ledger_id=: (String) -> String

      attr_reader ledger_transaction_id: String?

      def ledger_transaction_id=: (String) -> String

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_reader per_page: Integer?

      def per_page=: (Integer) -> Integer

      attr_reader settled_ledger_account_id: String?

      def settled_ledger_account_id=: (String) -> String

      attr_reader settlement_entry_direction: String?

      def settlement_entry_direction=: (String) -> String

      attr_reader updated_at: ::Hash[Symbol, Time]?

      def updated_at=: (::Hash[Symbol, Time]) -> ::Hash[Symbol, Time]

      def initialize: (
        ?id: ::Array[String],
        ?after_cursor: String?,
        ?created_at: ::Hash[Symbol, Time],
        ?ledger_id: String,
        ?ledger_transaction_id: String,
        ?metadata: ::Hash[Symbol, String],
        ?per_page: Integer,
        ?settled_ledger_account_id: String,
        ?settlement_entry_direction: String,
        ?updated_at: ::Hash[Symbol, Time],
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> {
        id: ::Array[String],
        after_cursor: String?,
        created_at: ::Hash[Symbol, Time],
        ledger_id: String,
        ledger_transaction_id: String,
        metadata: ::Hash[Symbol, String],
        per_page: Integer,
        settled_ledger_account_id: String,
        settlement_entry_direction: String,
        updated_at: ::Hash[Symbol, Time],
        request_options: ModernTreasury::RequestOptions
      }
    end
  end
end
