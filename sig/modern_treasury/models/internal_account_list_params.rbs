module ModernTreasury
  module Models
    type internal_account_list_params =
      {
        after_cursor: String?,
        counterparty_id: String,
        currency: ModernTreasury::Models::currency,
        legal_entity_id: String,
        metadata: ::Hash[Symbol, String],
        payment_direction: ModernTreasury::Models::transaction_direction,
        payment_type: ModernTreasury::Models::InternalAccountListParams::payment_type,
        per_page: Integer
      }
      & ModernTreasury::Internal::Type::request_parameters

    class InternalAccountListParams < ModernTreasury::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor after_cursor: String?

      attr_reader counterparty_id: String?

      def counterparty_id=: (String) -> String

      attr_reader currency: ModernTreasury::Models::currency?

      def currency=: (
        ModernTreasury::Models::currency
      ) -> ModernTreasury::Models::currency

      attr_reader legal_entity_id: String?

      def legal_entity_id=: (String) -> String

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_reader payment_direction: ModernTreasury::Models::transaction_direction?

      def payment_direction=: (
        ModernTreasury::Models::transaction_direction
      ) -> ModernTreasury::Models::transaction_direction

      attr_reader payment_type: ModernTreasury::Models::InternalAccountListParams::payment_type?

      def payment_type=: (
        ModernTreasury::Models::InternalAccountListParams::payment_type
      ) -> ModernTreasury::Models::InternalAccountListParams::payment_type

      attr_reader per_page: Integer?

      def per_page=: (Integer) -> Integer

      def initialize: (
        ?after_cursor: String?,
        ?counterparty_id: String,
        ?currency: ModernTreasury::Models::currency,
        ?legal_entity_id: String,
        ?metadata: ::Hash[Symbol, String],
        ?payment_direction: ModernTreasury::Models::transaction_direction,
        ?payment_type: ModernTreasury::Models::InternalAccountListParams::payment_type,
        ?per_page: Integer,
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> ModernTreasury::Models::internal_account_list_params

      type payment_type =
        :ach
        | :au_becs
        | :bacs
        | :book
        | :card
        | :chats
        | :check
        | :cross_border
        | :dk_nets
        | :eft
        | :hu_ics
        | :interac
        | :masav
        | :mx_ccen
        | :neft
        | :nics
        | :nz_becs
        | :pl_elixir
        | :provxchange
        | :ro_sent
        | :rtp
        | :se_bankgirot
        | :sen
        | :sepa
        | :sg_giro
        | :sic
        | :signet
        | :sknbi
        | :wire
        | :zengin

      module PaymentType
        extend ModernTreasury::Enum

        ACH: :ach
        AU_BECS: :au_becs
        BACS: :bacs
        BOOK: :book
        CARD: :card
        CHATS: :chats
        CHECK: :check
        CROSS_BORDER: :cross_border
        DK_NETS: :dk_nets
        EFT: :eft
        HU_ICS: :hu_ics
        INTERAC: :interac
        MASAV: :masav
        MX_CCEN: :mx_ccen
        NEFT: :neft
        NICS: :nics
        NZ_BECS: :nz_becs
        PL_ELIXIR: :pl_elixir
        PROVXCHANGE: :provxchange
        RO_SENT: :ro_sent
        RTP: :rtp
        SE_BANKGIROT: :se_bankgirot
        SEN: :sen
        SEPA: :sepa
        SG_GIRO: :sg_giro
        SIC: :sic
        SIGNET: :signet
        SKNBI: :sknbi
        WIRE: :wire
        ZENGIN: :zengin

        def self?.values: -> ::Array[ModernTreasury::Models::InternalAccountListParams::payment_type]
      end
    end
  end
end
