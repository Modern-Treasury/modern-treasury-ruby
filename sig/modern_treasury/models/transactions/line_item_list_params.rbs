module ModernTreasury
  module Models
    module Transactions
      type line_item_list_params =
        {
          id: ::Hash[Symbol, String],
          after_cursor: String?,
          per_page: Integer,
          transaction_id: String,
          type: ModernTreasury::Models::Transactions::LineItemListParams::type_?
        }
        & ModernTreasury::Internal::Type::request_parameters

      class LineItemListParams < ModernTreasury::Internal::Type::BaseModel
        extend ModernTreasury::Internal::Type::RequestParameters::Converter
        include ModernTreasury::Internal::Type::RequestParameters

        attr_reader id: ::Hash[Symbol, String]?

        def id=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

        attr_accessor after_cursor: String?

        attr_reader per_page: Integer?

        def per_page=: (Integer) -> Integer

        attr_reader transaction_id: String?

        def transaction_id=: (String) -> String

        attr_accessor type: ModernTreasury::Models::Transactions::LineItemListParams::type_?

        def initialize: (
          ?id: ::Hash[Symbol, String],
          ?after_cursor: String?,
          ?per_page: Integer,
          ?transaction_id: String,
          ?type: ModernTreasury::Models::Transactions::LineItemListParams::type_?,
          ?request_options: ModernTreasury::request_opts
        ) -> void

        def to_hash: -> ModernTreasury::Models::Transactions::line_item_list_params

        type type_ = :originating | :receiving

        module Type
          extend ModernTreasury::Internal::Type::Enum

          ORIGINATING: :originating
          RECEIVING: :receiving

          def self?.values: -> ::Array[ModernTreasury::Models::Transactions::LineItemListParams::type_]
        end
      end
    end
  end
end
