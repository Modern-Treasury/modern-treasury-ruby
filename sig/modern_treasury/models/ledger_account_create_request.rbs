module ModernTreasury
  module Models
    type ledger_account_create_request =
      {
        currency: String,
        ledger_id: String,
        name: String,
        normal_balance: ModernTreasury::Models::transaction_direction,
        currency_exponent: Integer?,
        description: String?,
        ledger_account_category_ids: ::Array[String],
        ledgerable_id: String,
        ledgerable_type: ModernTreasury::Models::LedgerAccountCreateRequest::ledgerable_type,
        metadata: ::Hash[Symbol, String]
      }

    class LedgerAccountCreateRequest < ModernTreasury::Internal::Type::BaseModel
      attr_accessor currency: String

      attr_accessor ledger_id: String

      attr_accessor name: String

      attr_accessor normal_balance: ModernTreasury::Models::transaction_direction

      attr_accessor currency_exponent: Integer?

      attr_accessor description: String?

      attr_reader ledger_account_category_ids: ::Array[String]?

      def ledger_account_category_ids=: (::Array[String]) -> ::Array[String]

      attr_reader ledgerable_id: String?

      def ledgerable_id=: (String) -> String

      attr_reader ledgerable_type: ModernTreasury::Models::LedgerAccountCreateRequest::ledgerable_type?

      def ledgerable_type=: (
        ModernTreasury::Models::LedgerAccountCreateRequest::ledgerable_type
      ) -> ModernTreasury::Models::LedgerAccountCreateRequest::ledgerable_type

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      def initialize: (
        currency: String,
        ledger_id: String,
        name: String,
        normal_balance: ModernTreasury::Models::transaction_direction,
        ?currency_exponent: Integer?,
        ?description: String?,
        ?ledger_account_category_ids: ::Array[String],
        ?ledgerable_id: String,
        ?ledgerable_type: ModernTreasury::Models::LedgerAccountCreateRequest::ledgerable_type,
        ?metadata: ::Hash[Symbol, String]
      ) -> void

      def to_hash: -> {
        currency: String,
        ledger_id: String,
        name: String,
        normal_balance: ModernTreasury::Models::transaction_direction,
        currency_exponent: Integer?,
        description: String?,
        ledger_account_category_ids: ::Array[String],
        ledgerable_id: String,
        ledgerable_type: ModernTreasury::Models::LedgerAccountCreateRequest::ledgerable_type,
        metadata: ::Hash[Symbol, String]
      }

      type ledgerable_type =
        :counterparty | :external_account | :internal_account | :virtual_account

      module LedgerableType
        extend ModernTreasury::Internal::Type::Enum

        COUNTERPARTY: :counterparty
        EXTERNAL_ACCOUNT: :external_account
        INTERNAL_ACCOUNT: :internal_account
        VIRTUAL_ACCOUNT: :virtual_account

        def self?.values: -> ::Array[ModernTreasury::Models::LedgerAccountCreateRequest::ledgerable_type]
      end
    end
  end
end
