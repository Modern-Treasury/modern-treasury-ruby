module ModernTreasury
  module Models
    type external_account_create_params =
      {
        counterparty_id: String?,
        account_details: ::Array[ModernTreasury::ExternalAccountCreateParams::AccountDetail],
        account_type: ModernTreasury::Models::external_account_type,
        contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
        ledger_account: ModernTreasury::LedgerAccountCreateRequest,
        metadata: ::Hash[Symbol, String],
        name: String?,
        party_address: ModernTreasury::AddressRequest,
        party_identifier: String,
        party_name: String,
        party_type: ModernTreasury::Models::ExternalAccountCreateParams::party_type?,
        plaid_processor_token: String,
        routing_details: ::Array[ModernTreasury::ExternalAccountCreateParams::RoutingDetail]
      }
      & ModernTreasury::Internal::Type::request_parameters

    class ExternalAccountCreateParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor counterparty_id: String?

      attr_reader account_details: ::Array[ModernTreasury::ExternalAccountCreateParams::AccountDetail]?

      def account_details=: (
        ::Array[ModernTreasury::ExternalAccountCreateParams::AccountDetail]
      ) -> ::Array[ModernTreasury::ExternalAccountCreateParams::AccountDetail]

      attr_reader account_type: ModernTreasury::Models::external_account_type?

      def account_type=: (
        ModernTreasury::Models::external_account_type
      ) -> ModernTreasury::Models::external_account_type

      attr_reader contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest]?

      def contact_details=: (
        ::Array[ModernTreasury::ContactDetailCreateRequest]
      ) -> ::Array[ModernTreasury::ContactDetailCreateRequest]

      attr_reader ledger_account: ModernTreasury::LedgerAccountCreateRequest?

      def ledger_account=: (
        ModernTreasury::LedgerAccountCreateRequest
      ) -> ModernTreasury::LedgerAccountCreateRequest

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_accessor name: String?

      attr_reader party_address: ModernTreasury::AddressRequest?

      def party_address=: (
        ModernTreasury::AddressRequest
      ) -> ModernTreasury::AddressRequest

      attr_reader party_identifier: String?

      def party_identifier=: (String) -> String

      attr_reader party_name: String?

      def party_name=: (String) -> String

      attr_accessor party_type: ModernTreasury::Models::ExternalAccountCreateParams::party_type?

      attr_reader plaid_processor_token: String?

      def plaid_processor_token=: (String) -> String

      attr_reader routing_details: ::Array[ModernTreasury::ExternalAccountCreateParams::RoutingDetail]?

      def routing_details=: (
        ::Array[ModernTreasury::ExternalAccountCreateParams::RoutingDetail]
      ) -> ::Array[ModernTreasury::ExternalAccountCreateParams::RoutingDetail]

      def initialize: (
        counterparty_id: String?,
        ?account_details: ::Array[ModernTreasury::ExternalAccountCreateParams::AccountDetail],
        ?account_type: ModernTreasury::Models::external_account_type,
        ?contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
        ?ledger_account: ModernTreasury::LedgerAccountCreateRequest,
        ?metadata: ::Hash[Symbol, String],
        ?name: String?,
        ?party_address: ModernTreasury::AddressRequest,
        ?party_identifier: String,
        ?party_name: String,
        ?party_type: ModernTreasury::Models::ExternalAccountCreateParams::party_type?,
        ?plaid_processor_token: String,
        ?routing_details: ::Array[ModernTreasury::ExternalAccountCreateParams::RoutingDetail],
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> {
        counterparty_id: String?,
        account_details: ::Array[ModernTreasury::ExternalAccountCreateParams::AccountDetail],
        account_type: ModernTreasury::Models::external_account_type,
        contact_details: ::Array[ModernTreasury::ContactDetailCreateRequest],
        ledger_account: ModernTreasury::LedgerAccountCreateRequest,
        metadata: ::Hash[Symbol, String],
        name: String?,
        party_address: ModernTreasury::AddressRequest,
        party_identifier: String,
        party_name: String,
        party_type: ModernTreasury::Models::ExternalAccountCreateParams::party_type?,
        plaid_processor_token: String,
        routing_details: ::Array[ModernTreasury::ExternalAccountCreateParams::RoutingDetail],
        request_options: ModernTreasury::RequestOptions
      }

      type account_detail =
        {
          account_number: String,
          account_number_type: ModernTreasury::Models::ExternalAccountCreateParams::AccountDetail::account_number_type
        }

      class AccountDetail < ModernTreasury::Internal::Type::BaseModel
        attr_accessor account_number: String

        attr_reader account_number_type: ModernTreasury::Models::ExternalAccountCreateParams::AccountDetail::account_number_type?

        def account_number_type=: (
          ModernTreasury::Models::ExternalAccountCreateParams::AccountDetail::account_number_type
        ) -> ModernTreasury::Models::ExternalAccountCreateParams::AccountDetail::account_number_type

        def initialize: (
          account_number: String,
          ?account_number_type: ModernTreasury::Models::ExternalAccountCreateParams::AccountDetail::account_number_type
        ) -> void

        def to_hash: -> {
          account_number: String,
          account_number_type: ModernTreasury::Models::ExternalAccountCreateParams::AccountDetail::account_number_type
        }

        type account_number_type =
          :au_number
          | :base_address
          | :clabe
          | :ethereum_address
          | :hk_number
          | :iban
          | :id_number
          | :nz_number
          | :other
          | :pan
          | :polygon_address
          | :sg_number
          | :solana_address
          | :wallet_address

        module AccountNumberType
          extend ModernTreasury::Internal::Type::Enum

          AU_NUMBER: :au_number
          BASE_ADDRESS: :base_address
          CLABE: :clabe
          ETHEREUM_ADDRESS: :ethereum_address
          HK_NUMBER: :hk_number
          IBAN: :iban
          ID_NUMBER: :id_number
          NZ_NUMBER: :nz_number
          OTHER: :other
          PAN: :pan
          POLYGON_ADDRESS: :polygon_address
          SG_NUMBER: :sg_number
          SOLANA_ADDRESS: :solana_address
          WALLET_ADDRESS: :wallet_address

          def self?.values: -> ::Array[ModernTreasury::Models::ExternalAccountCreateParams::AccountDetail::account_number_type]
        end
      end

      type party_type = :business | :individual

      module PartyType
        extend ModernTreasury::Internal::Type::Enum

        BUSINESS: :business
        INDIVIDUAL: :individual

        def self?.values: -> ::Array[ModernTreasury::Models::ExternalAccountCreateParams::party_type]
      end

      type routing_detail =
        {
          routing_number: String,
          routing_number_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::routing_number_type,
          payment_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::payment_type
        }

      class RoutingDetail < ModernTreasury::Internal::Type::BaseModel
        attr_accessor routing_number: String

        attr_accessor routing_number_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::routing_number_type

        attr_reader payment_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::payment_type?

        def payment_type=: (
          ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::payment_type
        ) -> ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::payment_type

        def initialize: (
          routing_number: String,
          routing_number_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::routing_number_type,
          ?payment_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::payment_type
        ) -> void

        def to_hash: -> {
          routing_number: String,
          routing_number_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::routing_number_type,
          payment_type: ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::payment_type
        }

        type routing_number_type =
          :aba
          | :au_bsb
          | :br_codigo
          | :ca_cpa
          | :chips
          | :cnaps
          | :dk_interbank_clearing_code
          | :gb_sort_code
          | :hk_interbank_clearing_code
          | :hu_interbank_clearing_code
          | :id_sknbi_code
          | :il_bank_code
          | :in_ifsc
          | :jp_zengin_code
          | :my_branch_code
          | :mx_bank_identifier
          | :nz_national_clearing_code
          | :pl_national_clearing_code
          | :se_bankgiro_clearing_code
          | :sg_interbank_clearing_code
          | :swift
          | :za_national_clearing_code

        module RoutingNumberType
          extend ModernTreasury::Internal::Type::Enum

          ABA: :aba
          AU_BSB: :au_bsb
          BR_CODIGO: :br_codigo
          CA_CPA: :ca_cpa
          CHIPS: :chips
          CNAPS: :cnaps
          DK_INTERBANK_CLEARING_CODE: :dk_interbank_clearing_code
          GB_SORT_CODE: :gb_sort_code
          HK_INTERBANK_CLEARING_CODE: :hk_interbank_clearing_code
          HU_INTERBANK_CLEARING_CODE: :hu_interbank_clearing_code
          ID_SKNBI_CODE: :id_sknbi_code
          IL_BANK_CODE: :il_bank_code
          IN_IFSC: :in_ifsc
          JP_ZENGIN_CODE: :jp_zengin_code
          MY_BRANCH_CODE: :my_branch_code
          MX_BANK_IDENTIFIER: :mx_bank_identifier
          NZ_NATIONAL_CLEARING_CODE: :nz_national_clearing_code
          PL_NATIONAL_CLEARING_CODE: :pl_national_clearing_code
          SE_BANKGIRO_CLEARING_CODE: :se_bankgiro_clearing_code
          SG_INTERBANK_CLEARING_CODE: :sg_interbank_clearing_code
          SWIFT: :swift
          ZA_NATIONAL_CLEARING_CODE: :za_national_clearing_code

          def self?.values: -> ::Array[ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::routing_number_type]
        end

        type payment_type =
          :ach
          | :au_becs
          | :bacs
          | :base
          | :book
          | :card
          | :chats
          | :check
          | :cross_border
          | :dk_nets
          | :eft
          | :ethereum
          | :hu_ics
          | :interac
          | :masav
          | :mx_ccen
          | :neft
          | :nics
          | :nz_becs
          | :pl_elixir
          | :polygon
          | :provxchange
          | :ro_sent
          | :rtp
          | :se_bankgirot
          | :sen
          | :sepa
          | :sg_giro
          | :sic
          | :signet
          | :sknbi
          | :solana
          | :wire
          | :zengin

        module PaymentType
          extend ModernTreasury::Internal::Type::Enum

          ACH: :ach
          AU_BECS: :au_becs
          BACS: :bacs
          BASE: :base
          BOOK: :book
          CARD: :card
          CHATS: :chats
          CHECK: :check
          CROSS_BORDER: :cross_border
          DK_NETS: :dk_nets
          EFT: :eft
          ETHEREUM: :ethereum
          HU_ICS: :hu_ics
          INTERAC: :interac
          MASAV: :masav
          MX_CCEN: :mx_ccen
          NEFT: :neft
          NICS: :nics
          NZ_BECS: :nz_becs
          PL_ELIXIR: :pl_elixir
          POLYGON: :polygon
          PROVXCHANGE: :provxchange
          RO_SENT: :ro_sent
          RTP: :rtp
          SE_BANKGIROT: :se_bankgirot
          SEN: :sen
          SEPA: :sepa
          SG_GIRO: :sg_giro
          SIC: :sic
          SIGNET: :signet
          SKNBI: :sknbi
          SOLANA: :solana
          WIRE: :wire
          ZENGIN: :zengin

          def self?.values: -> ::Array[ModernTreasury::Models::ExternalAccountCreateParams::RoutingDetail::payment_type]
        end
      end
    end
  end
end
