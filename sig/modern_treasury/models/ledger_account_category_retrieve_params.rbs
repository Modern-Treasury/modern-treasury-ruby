module ModernTreasury
  module Models
    type ledger_account_category_retrieve_params =
      {
        balances: ModernTreasury::LedgerAccountCategoryRetrieveParams::Balances
      }
      & ModernTreasury::Internal::Type::request_parameters

    class LedgerAccountCategoryRetrieveParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_reader balances: ModernTreasury::LedgerAccountCategoryRetrieveParams::Balances?

      def balances=: (
        ModernTreasury::LedgerAccountCategoryRetrieveParams::Balances
      ) -> ModernTreasury::LedgerAccountCategoryRetrieveParams::Balances

      def initialize: (
        ?balances: ModernTreasury::LedgerAccountCategoryRetrieveParams::Balances,
        ?request_options: ModernTreasury::request_opts
      ) -> void

      type balances = { as_of_date: Date, effective_at: Time }

      class Balances < ModernTreasury::Internal::Type::BaseModel
        attr_reader as_of_date: Date?

        def as_of_date=: (Date) -> Date

        attr_reader effective_at: Time?

        def effective_at=: (Time) -> Time

        def initialize: (?as_of_date: Date, ?effective_at: Time) -> void
      end
    end
  end
end
