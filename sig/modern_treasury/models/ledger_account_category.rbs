module ModernTreasury
  module Models
    type ledger_account_category =
      {
        id: String,
        balances: ModernTreasury::LedgerBalances,
        created_at: Time,
        description: String?,
        discarded_at: Time?,
        external_id: String?,
        ledger_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String],
        name: String,
        normal_balance: ModernTreasury::Models::transaction_direction,
        object: String,
        updated_at: Time
      }

    class LedgerAccountCategory < ModernTreasury::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor balances: ModernTreasury::LedgerBalances

      attr_accessor created_at: Time

      attr_accessor description: String?

      attr_accessor discarded_at: Time?

      attr_accessor external_id: String?

      attr_accessor ledger_id: String

      attr_accessor live_mode: bool

      attr_accessor metadata: ::Hash[Symbol, String]

      attr_accessor name: String

      attr_accessor normal_balance: ModernTreasury::Models::transaction_direction

      attr_accessor object: String

      attr_accessor updated_at: Time

      def initialize: (
        id: String,
        balances: ModernTreasury::LedgerBalances,
        created_at: Time,
        description: String?,
        discarded_at: Time?,
        external_id: String?,
        ledger_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String],
        name: String,
        normal_balance: ModernTreasury::Models::transaction_direction,
        object: String,
        updated_at: Time
      ) -> void

      def to_hash: -> {
        id: String,
        balances: ModernTreasury::LedgerBalances,
        created_at: Time,
        description: String?,
        discarded_at: Time?,
        external_id: String?,
        ledger_id: String,
        live_mode: bool,
        metadata: ::Hash[Symbol, String],
        name: String,
        normal_balance: ModernTreasury::Models::transaction_direction,
        object: String,
        updated_at: Time
      }
    end
  end
end
