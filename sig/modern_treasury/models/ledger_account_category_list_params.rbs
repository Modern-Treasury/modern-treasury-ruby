module ModernTreasury
  module Models
    type ledger_account_category_list_params =
      {
        id: ::Array[String],
        after_cursor: String?,
        balances: ModernTreasury::LedgerAccountCategoryListParams::Balances,
        currency: String,
        external_id: String,
        ledger_account_id: String,
        ledger_id: String,
        metadata: ::Hash[Symbol, String],
        name: ::Array[String],
        parent_ledger_account_category_id: String,
        per_page: Integer
      }
      & ModernTreasury::Internal::Type::request_parameters

    class LedgerAccountCategoryListParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_reader id: ::Array[String]?

      def id=: (::Array[String]) -> ::Array[String]

      attr_accessor after_cursor: String?

      attr_reader balances: ModernTreasury::LedgerAccountCategoryListParams::Balances?

      def balances=: (
        ModernTreasury::LedgerAccountCategoryListParams::Balances
      ) -> ModernTreasury::LedgerAccountCategoryListParams::Balances

      attr_reader currency: String?

      def currency=: (String) -> String

      attr_reader external_id: String?

      def external_id=: (String) -> String

      attr_reader ledger_account_id: String?

      def ledger_account_id=: (String) -> String

      attr_reader ledger_id: String?

      def ledger_id=: (String) -> String

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_reader name: ::Array[String]?

      def name=: (::Array[String]) -> ::Array[String]

      attr_reader parent_ledger_account_category_id: String?

      def parent_ledger_account_category_id=: (String) -> String

      attr_reader per_page: Integer?

      def per_page=: (Integer) -> Integer

      def initialize: (
        ?id: ::Array[String],
        ?after_cursor: String?,
        ?balances: ModernTreasury::LedgerAccountCategoryListParams::Balances,
        ?currency: String,
        ?external_id: String,
        ?ledger_account_id: String,
        ?ledger_id: String,
        ?metadata: ::Hash[Symbol, String],
        ?name: ::Array[String],
        ?parent_ledger_account_category_id: String,
        ?per_page: Integer,
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> {
        id: ::Array[String],
        after_cursor: String?,
        balances: ModernTreasury::LedgerAccountCategoryListParams::Balances,
        currency: String,
        external_id: String,
        ledger_account_id: String,
        ledger_id: String,
        metadata: ::Hash[Symbol, String],
        name: ::Array[String],
        parent_ledger_account_category_id: String,
        per_page: Integer,
        request_options: ModernTreasury::RequestOptions
      }

      type balances = { effective_at: Time }

      class Balances < ModernTreasury::Internal::Type::BaseModel
        attr_reader effective_at: Time?

        def effective_at=: (Time) -> Time

        def initialize: (?effective_at: Time) -> void

        def to_hash: -> { effective_at: Time }
      end
    end
  end
end
