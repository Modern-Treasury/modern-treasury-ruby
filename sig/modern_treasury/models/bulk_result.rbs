module ModernTreasury
  module Models
    type bulk_result =
      {
        id: String,
        created_at: Time,
        entity: ModernTreasury::Models::BulkResult::entity,
        entity_id: String,
        entity_type: ModernTreasury::Models::BulkResult::entity_type,
        live_mode: bool,
        object: String,
        request_id: String,
        request_params: ::Hash[Symbol, String]?,
        request_type: ModernTreasury::Models::BulkResult::request_type,
        status: ModernTreasury::Models::BulkResult::status,
        updated_at: Time
      }

    class BulkResult < ModernTreasury::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor created_at: Time

      attr_accessor entity: ModernTreasury::Models::BulkResult::entity

      attr_accessor entity_id: String

      attr_accessor entity_type: ModernTreasury::Models::BulkResult::entity_type

      attr_accessor live_mode: bool

      attr_accessor object: String

      attr_accessor request_id: String

      attr_accessor request_params: ::Hash[Symbol, String]?

      attr_accessor request_type: ModernTreasury::Models::BulkResult::request_type

      attr_accessor status: ModernTreasury::Models::BulkResult::status

      attr_accessor updated_at: Time

      def initialize: (
        id: String,
        created_at: Time,
        entity: ModernTreasury::Models::BulkResult::entity,
        entity_id: String,
        entity_type: ModernTreasury::Models::BulkResult::entity_type,
        live_mode: bool,
        object: String,
        request_id: String,
        request_params: ::Hash[Symbol, String]?,
        request_type: ModernTreasury::Models::BulkResult::request_type,
        status: ModernTreasury::Models::BulkResult::status,
        updated_at: Time
      ) -> void

      def to_hash: -> ModernTreasury::Models::bulk_result

      type entity =
        ModernTreasury::Models::PaymentOrder
        | ModernTreasury::Models::ExpectedPayment
        | ModernTreasury::Models::LedgerTransaction
        | ModernTreasury::Models::Transaction
        | ModernTreasury::Models::BulkResult::Entity::BulkError

      module Entity
        extend ModernTreasury::Internal::Type::Union

        type bulk_error =
          {
            id: String,
            created_at: Time,
            live_mode: bool,
            object: String,
            request_errors: ::Array[ModernTreasury::Models::BulkResult::Entity::BulkError::RequestError],
            updated_at: Time
          }

        class BulkError < ModernTreasury::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor created_at: Time

          attr_accessor live_mode: bool

          attr_accessor object: String

          attr_accessor request_errors: ::Array[ModernTreasury::Models::BulkResult::Entity::BulkError::RequestError]

          attr_accessor updated_at: Time

          def initialize: (
            id: String,
            created_at: Time,
            live_mode: bool,
            object: String,
            request_errors: ::Array[ModernTreasury::Models::BulkResult::Entity::BulkError::RequestError],
            updated_at: Time
          ) -> void

          def to_hash: -> ModernTreasury::Models::BulkResult::Entity::bulk_error

          type request_error =
            { code: String, message: String, parameter: String }

          class RequestError < ModernTreasury::Internal::Type::BaseModel
            attr_reader code: String?

            def code=: (String) -> String

            attr_reader message: String?

            def message=: (String) -> String

            attr_reader parameter: String?

            def parameter=: (String) -> String

            def initialize: (
              ?code: String,
              ?message: String,
              ?parameter: String
            ) -> void

            def to_hash: -> ModernTreasury::Models::BulkResult::Entity::BulkError::request_error
          end
        end

        def self?.variants: -> [ModernTreasury::Models::PaymentOrder, ModernTreasury::Models::ExpectedPayment, ModernTreasury::Models::LedgerTransaction, ModernTreasury::Models::Transaction, ModernTreasury::Models::BulkResult::Entity::BulkError]
      end

      type entity_type =
        :payment_order
        | :ledger_account
        | :ledger_transaction
        | :expected_payment
        | :transaction
        | :entity_link
        | :bulk_error

      module EntityType
        extend ModernTreasury::Internal::Type::Enum

        PAYMENT_ORDER: :payment_order
        LEDGER_ACCOUNT: :ledger_account
        LEDGER_TRANSACTION: :ledger_transaction
        EXPECTED_PAYMENT: :expected_payment
        TRANSACTION: :transaction
        ENTITY_LINK: :entity_link
        BULK_ERROR: :bulk_error

        def self?.values: -> ::Array[ModernTreasury::Models::BulkResult::entity_type]
      end

      type request_type = :bulk_request

      module RequestType
        extend ModernTreasury::Internal::Type::Enum

        BULK_REQUEST: :bulk_request

        def self?.values: -> ::Array[ModernTreasury::Models::BulkResult::request_type]
      end

      type status = :pending | :successful | :failed

      module Status
        extend ModernTreasury::Internal::Type::Enum

        PENDING: :pending
        SUCCESSFUL: :successful
        FAILED: :failed

        def self?.values: -> ::Array[ModernTreasury::Models::BulkResult::status]
      end
    end
  end
end
