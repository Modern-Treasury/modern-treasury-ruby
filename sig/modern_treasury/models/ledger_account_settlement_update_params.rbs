module ModernTreasury
  module Models
    type ledger_account_settlement_update_params =
      {
        description: String?,
        metadata: ::Hash[Symbol, String],
        status: ModernTreasury::Models::LedgerAccountSettlementUpdateParams::status
      }
      & ModernTreasury::Internal::Type::request_parameters

    class LedgerAccountSettlementUpdateParams < ModernTreasury::Internal::Type::BaseModel
      extend ModernTreasury::Internal::Type::RequestParameters::Converter
      include ModernTreasury::Internal::Type::RequestParameters

      attr_accessor description: String?

      attr_reader metadata: ::Hash[Symbol, String]?

      def metadata=: (::Hash[Symbol, String]) -> ::Hash[Symbol, String]

      attr_reader status: ModernTreasury::Models::LedgerAccountSettlementUpdateParams::status?

      def status=: (
        ModernTreasury::Models::LedgerAccountSettlementUpdateParams::status
      ) -> ModernTreasury::Models::LedgerAccountSettlementUpdateParams::status

      def initialize: (
        ?description: String?,
        ?metadata: ::Hash[Symbol, String],
        ?status: ModernTreasury::Models::LedgerAccountSettlementUpdateParams::status,
        ?request_options: ModernTreasury::request_opts
      ) -> void

      def to_hash: -> {
        description: String?,
        metadata: ::Hash[Symbol, String],
        status: ModernTreasury::Models::LedgerAccountSettlementUpdateParams::status,
        request_options: ModernTreasury::RequestOptions
      }

      type status = :posted | :archived

      module Status
        extend ModernTreasury::Internal::Type::Enum

        POSTED: :posted
        ARCHIVED: :archived

        def self?.values: -> ::Array[ModernTreasury::Models::LedgerAccountSettlementUpdateParams::status]
      end
    end
  end
end
